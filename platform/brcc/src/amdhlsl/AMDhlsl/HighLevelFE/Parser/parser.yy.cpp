#define yy_create_buffer zz_create_buffer
#define yy_delete_buffer zz_delete_buffer
#define yy_scan_buffer zz_scan_buffer
#define yy_scan_string zz_scan_string
#define yy_scan_bytes zz_scan_bytes
#define yy_flex_debug zz_flex_debug
#define yy_init_buffer zz_init_buffer
#define yy_flush_buffer zz_flush_buffer
#define yy_load_buffer_state zz_load_buffer_state
#define yy_switch_to_buffer zz_switch_to_buffer
#define yyin zzin
#define yyleng zzleng
#define yylex zzlex
#define yyout zzout
#define yyrestart zzrestart
#define yytext zztext

/* A lexical scanner generated by flex */

/* Scanner skeleton version:
 * $Header: /home/daffy/u0/vern/flex/RCS/flex.skl,v 2.91 96/09/10 16:58:48 vern Exp $
 */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 5

#include <stdio.h>


/* cfront 1.2 defines "c_plusplus" instead of "__cplusplus" */
#ifdef c_plusplus
#ifndef __cplusplus
#define __cplusplus
#endif
#endif


#ifdef __cplusplus

#include <stdlib.h>
#include "unistd-wrapper.h"

/* Use prototypes in function declarations. */
#define YY_USE_PROTOS

/* The "const" storage-class-modifier is valid. */
#define YY_USE_CONST

#else	/* ! __cplusplus */

#if __STDC__

#define YY_USE_PROTOS
#define YY_USE_CONST

#endif	/* __STDC__ */
#endif	/* ! __cplusplus */

#ifdef __TURBOC__
 #pragma warn -rch
 #pragma warn -use
#include <io.h>
#include <stdlib.h>
#define YY_USE_CONST
#define YY_USE_PROTOS
#endif

#ifdef YY_USE_CONST
#define yyconst const
#else
#define yyconst
#endif


#ifdef YY_USE_PROTOS
#define YY_PROTO(proto) proto
#else
#define YY_PROTO(proto) ()
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN yy_start = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START ((yy_start - 1) / 2)
#define YYSTATE YY_START

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#define YY_BUF_SIZE 16384

typedef struct yy_buffer_state *YY_BUFFER_STATE;

extern int yyleng;
extern FILE *yyin, *yyout;

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

/* The funky do-while in the following #define is used to turn the definition
 * int a single C statement (which needs a semi-colon terminator).  This
 * avoids problems with code like:
 *
 * 	if ( condition_holds )
 *		yyless( 5 );
 *	else
 *		do_something_else();
 *
 * Prior to using the do-while the compiler would get upset at the
 * "else" because it interpreted the "if" statement as being all
 * done when it reached the ';' after the yyless() call.
 */

/* Return all but the first 'n' matched characters back to the input stream. */

#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
		*yy_cp = yy_hold_char; \
		YY_RESTORE_YY_MORE_OFFSET \
		yy_c_buf_p = yy_cp = yy_bp + n - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, yytext_ptr )

/* The following is because we cannot portably get our hands on size_t
 * (without autoconf's help, which isn't available because we want
 * flex-generated scanners to compile on their own).
 */
typedef unsigned int yy_size_t;


struct yy_buffer_state
	{
	FILE *yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	yy_size_t yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;
#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2
	};

static YY_BUFFER_STATE yy_current_buffer = 0;

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 */
#define YY_CURRENT_BUFFER yy_current_buffer


/* yy_hold_char holds the character lost when yytext is formed. */
static char yy_hold_char;

static int yy_n_chars;		/* number of characters read into yy_ch_buf */


int yyleng;

/* Points to current character in buffer. */
static char *yy_c_buf_p = (char *) 0;
static int yy_init = 1;		/* whether we need to initialize */
static int yy_start = 0;	/* start state number */

/* Flag which is used to allow yywrap()'s to do buffer switches
 * instead of setting up a fresh yyin.  A bit of a hack ...
 */
static int yy_did_buffer_switch_on_eof;

void yyrestart YY_PROTO(( FILE *input_file ));

void yy_switch_to_buffer YY_PROTO(( YY_BUFFER_STATE new_buffer ));
void yy_load_buffer_state YY_PROTO(( void ));
YY_BUFFER_STATE yy_create_buffer YY_PROTO(( FILE *file, int size ));
void yy_delete_buffer YY_PROTO(( YY_BUFFER_STATE b ));
void yy_init_buffer YY_PROTO(( YY_BUFFER_STATE b, FILE *file ));
void yy_flush_buffer YY_PROTO(( YY_BUFFER_STATE b ));
#define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )

YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *yy_str ));
YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));

static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
static void *yy_flex_realloc YY_PROTO(( void *, yy_size_t ));
static void yy_flex_free YY_PROTO(( void * ));

#define yy_new_buffer yy_create_buffer

#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! yy_current_buffer ) \
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
	yy_current_buffer->yy_is_interactive = is_interactive; \
	}

#define yy_set_bol(at_bol) \
	{ \
	if ( ! yy_current_buffer ) \
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
	yy_current_buffer->yy_at_bol = at_bol; \
	}

#define YY_AT_BOL() (yy_current_buffer->yy_at_bol)


#define yywrap() 1
#define YY_SKIP_YYWRAP
typedef unsigned char YY_CHAR;
FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
typedef int yy_state_type;
extern char *yytext;
#define yytext_ptr yytext
static yyconst short yy_nxt[][62] =
    {
    {
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0
    },

    {
        3,    4,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   17,   18,   19,   20,   21,
       22,   21,   23,   21,   21,   21,   24,   25,   26,   27,

       28,   29,   21,   21,    4,   21,   21,   30,   31,   32,
       33,   34,   35,   21,   36,   21,   21,   37,   38,   39,
       40,   41,   42,   43,   44,   45,   46,   47,   21,   21,
       21,   48
    },

    {
        3,    4,    5,    6,    7,    8,    9,   10,   11,   12,
       13,   14,   15,   16,   17,   17,   18,   19,   20,   21,
       22,   21,   23,   21,   21,   21,   24,   25,   26,   27,
       28,   29,   21,   21,    4,   21,   21,   30,   31,   32,
       33,   34,   35,   21,   36,   21,   21,   37,   38,   39,
       40,   41,   42,   43,   44,   45,   46,   47,   21,   21,

       21,   48
    },

    {
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3
    },

    {
        3,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,

       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4
    },

    {
        3,   -5,   49,   49,   -5,   -5,   -5,   -5,   -5,   -5,
       -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,
       -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,
       -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,
       -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,

       -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,
       -5,   -5
    },

    {
        3,   -6,   49,   49,   -6,   -6,   -6,   -6,   -6,   -6,
       -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
       -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
       -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
       -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
       -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
       -6,   -6
    },

    {
        3,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,

       -7,   -7,   -7,   -7,   -7,   -7,   -7,   50,   -7,   -7,
       -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,
       -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,
       -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,
       -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,
       -7,   -7
    },

    {
        3,   51,   51,   -8,   51,   52,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   53,   51,   51,   51,   51,   51,

       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51
    },

    {
        3,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9

    },

    {
        3,  -10,  -10,  -10,  -10,  -10,  -10,   54,  -10,  -10,
      -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,
      -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,
      -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,
      -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,
      -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,
      -10,  -10
    },

    {
        3,   55,   55,   55,   55,   55,   55,   55,  -11,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,

       55,   55,   55,   55,   56,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55
    },

    {
        3,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
      -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
      -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
      -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
      -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
      -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,

      -12,  -12
    },

    {
        3,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,
       57,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,
      -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,
      -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,
      -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,
      -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,
      -13,  -13
    },

    {
        3,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,   58,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,

      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14
    },

    {
        3,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,
      -15,  -15,  -15,   59,   59,   59,  -15,  -15,  -15,  -15,
      -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,
      -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,
      -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,

      -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,
      -15,  -15
    },

    {
        3,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,
      -16,  -16,   60,   61,   61,   61,  -16,  -16,  -16,  -16,
      -16,  -16,  -16,   62,  -16,  -16,   63,  -16,  -16,  -16,
      -16,  -16,   63,   64,  -16,  -16,  -16,  -16,  -16,  -16,
       62,  -16,  -16,  -16,  -16,  -16,  -16,   63,  -16,  -16,
      -16,  -16,  -16,  -16,  -16,   63,  -16,  -16,   64,  -16,
      -16,  -16
    },

    {
        3,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,

      -17,  -17,   60,   61,   61,   61,  -17,  -17,  -17,  -17,
      -17,  -17,  -17,   62,  -17,  -17,   63,  -17,  -17,  -17,
      -17,  -17,   63,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
       62,  -17,  -17,  -17,  -17,  -17,  -17,   63,  -17,  -17,
      -17,  -17,  -17,  -17,  -17,   63,  -17,  -17,  -17,  -17,
      -17,  -17
    },

    {
        3,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,   65,   66,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,

      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18
    },

    {
        3,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,   67,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19

    },

    {
        3,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,
      -20,  -20,  -20,  -20,  -20,  -20,  -20,   68,   69,  -20,
      -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,
      -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,
      -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,
      -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,
      -20,  -20
    },

    {
        3,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,
      -21,  -21,  -21,   70,   70,   70,  -21,  -21,  -21,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,  -21,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -21
    },

    {
        3,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,
      -22,  -22,  -22,   70,   70,   70,  -22,  -22,  -22,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -22,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   71,   70,   70,
       70,   70,   70,   70,   70,   72,   70,   70,   70,   70,

       70,  -22
    },

    {
        3,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,
      -23,  -23,  -23,   70,   70,   70,  -23,  -23,  -23,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -23,   70,   70,   70,   70,   70,
       73,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -23
    },

    {
        3,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,
      -24,  -24,  -24,   70,   70,   70,  -24,  -24,  -24,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -24,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   74,   70,   70,   70,   70,   70,
       75,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -24
    },

    {
        3,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,
      -25,  -25,  -25,   70,   70,   70,  -25,  -25,  -25,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -25,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   76,   70,   70,   70,   70,
       70,  -25
    },

    {
        3,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,
      -26,  -26,  -26,   70,   70,   70,  -26,  -26,  -26,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -26,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       77,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -26
    },

    {
        3,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,

      -27,  -27,  -27,   70,   70,   70,  -27,  -27,  -27,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -27,   70,   78,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -27
    },

    {
        3,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,
      -28,  -28,  -28,   70,   70,   70,  -28,  -28,  -28,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -28,   70,   79,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -28
    },

    {
        3,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,
      -29,  -29,  -29,   70,   70,   70,  -29,  -29,  -29,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -29,   70,   70,   70,   70,   70,
       80,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   81,   70,   70,   70,   70,   70,   70,   70,
       70,  -29

    },

    {
        3,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,
      -30,  -30,  -30,   70,   70,   70,  -30,  -30,  -30,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -30,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   82,   70,   70,   70,   70,   70,   70,   70,
       70,  -30
    },

    {
        3,  -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,
      -31,  -31,  -31,   70,   70,   70,  -31,  -31,  -31,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,  -31,   70,   70,   83,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       84,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -31
    },

    {
        3,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,
      -32,  -32,  -32,   70,   70,   70,  -32,  -32,  -32,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -32,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   85,   70,   70,   70,   70,   70,
       86,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,  -32
    },

    {
        3,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,
      -33,  -33,  -33,   70,   70,   70,  -33,  -33,  -33,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -33,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   87,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   88,   70,
       70,  -33
    },

    {
        3,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,
      -34,  -34,  -34,   70,   70,   70,  -34,  -34,  -34,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -34,   70,   89,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       90,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -34
    },

    {
        3,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,
      -35,  -35,  -35,   70,   70,   70,  -35,  -35,  -35,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -35,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   91,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -35
    },

    {
        3,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,
      -36,  -36,  -36,   70,   70,   70,  -36,  -36,  -36,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -36,   70,   70,   70,   70,   70,
       70,   92,   70,   70,   70,   70,   70,   70,   70,   93,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -36
    },

    {
        3,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,

      -37,  -37,  -37,   70,   70,   70,  -37,  -37,  -37,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -37,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   94,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -37
    },

    {
        3,  -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,
      -38,  -38,  -38,   70,   70,   70,  -38,  -38,  -38,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -38,   70,   95,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -38
    },

    {
        3,  -39,  -39,  -39,  -39,  -39,  -39,  -39,  -39,  -39,
      -39,  -39,  -39,   70,   70,   70,  -39,  -39,  -39,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -39,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       96,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -39

    },

    {
        3,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,
      -40,  -40,  -40,   70,   70,   70,  -40,  -40,  -40,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -40,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   97,   70,   70,   70,   70,
       70,  -40
    },

    {
        3,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,
      -41,  -41,  -41,   70,   70,   70,  -41,  -41,  -41,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,  -41,   70,   70,   70,   70,   70,
       98,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       99,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -41
    },

    {
        3,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,
      -42,  -42,  -42,   70,   70,   70,  -42,  -42,  -42,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -42,   70,   70,   70,   70,   70,
      100,   70,   70,   70,   70,   70,   70,   70,   70,   70,
      101,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,  -42
    },

    {
        3,  -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,
      -43,  -43,  -43,   70,   70,   70,  -43,  -43,  -43,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -43,   70,  102,   70,   70,   70,
       70,   70,   70,  103,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  104,   70,   70,   70,   70,   70,
       70,  -43
    },

    {
        3,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,
      -44,  -44,  -44,   70,   70,   70,  -44,  -44,  -44,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -44,   70,  105,   83,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  106,   70,   70,   70,   70,   70,   70,   70,
       70,  -44
    },

    {
        3,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,
      -45,  -45,  -45,   70,   70,   70,  -45,  -45,  -45,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -45,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,  107,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -45
    },

    {
        3,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,
      -46,  -46,  -46,   70,   70,   70,  -46,  -46,  -46,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -46,   70,   70,   70,   70,   70,
      108,   70,   70,   70,   70,   70,   70,   70,   70,   70,
      109,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -46
    },

    {
        3,  -47,  -47,  -47,  -47,  -47,  -47,  -47,  -47,  -47,

      -47,  -47,  -47,   70,   70,   70,  -47,  -47,  -47,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -47,   70,   70,   70,   70,   70,
       70,   70,   70,  110,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -47
    },

    {
        3,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,
      -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,
      -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,
      -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,

      -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,
      -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,
      -48,  111
    },

    {
        3,  -49,   49,   49,  -49,  -49,  -49,  -49,  -49,  -49,
      -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,
      -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,
      -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,
      -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,
      -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,
      -49,  -49

    },

    {
        3,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,
      -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,
      -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,
      -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,
      -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,
      -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,
      -50,  -50
    },

    {
        3,   51,   51,  -51,   51,   52,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,

       51,   51,   51,   51,   53,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51
    },

    {
        3,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
      -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
      -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
      -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
      -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
      -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,

      -52,  -52
    },

    {
        3,   51,   51,  -53,   51,  112,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   53,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51
    },

    {
        3,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,
      -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,

      -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,
      -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,
      -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,
      -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,
      -54,  -54
    },

    {
        3,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  113,  -55,
      -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,
      -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,
      -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,
      -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,

      -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,
      -55,  -55
    },

    {
        3,   55,   55,  -56,   55,   55,   55,   55,  114,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55
    },

    {
        3,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,

      -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,
      -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,
      -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,
      -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,
      -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,
      -57,  -57
    },

    {
        3,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,
      -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,
      -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,
      -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,

      -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,
      -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,
      -58,  -58
    },

    {
        3,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,
      -59,  -59,  -59,   59,   59,   59,  -59,  -59,  -59,  -59,
      -59,  -59,  -59,  115,  116,  -59,  -59,  -59,  -59,  -59,
      -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,
      115,  116,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,
      -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,
      -59,  -59

    },

    {
        3,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,
      -60,  -60,  -60,  117,  117,  117,  -60,  -60,  -60,  -60,
      -60,  -60,  -60,  118,  119,  -60,  -60,  -60,  -60,  -60,
      -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,
      118,  119,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,
      -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,
      -60,  -60
    },

    {
        3,  -61,  -61,  -61,  -61,  -61,  -61,  -61,  -61,  -61,
      -61,  -61,   60,   61,   61,   61,  -61,  -61,  -61,  -61,
      -61,  -61,  -61,   62,  -61,  -61,   63,  -61,  -61,  -61,

      -61,  -61,   63,  -61,  -61,  -61,  -61,  -61,  -61,  -61,
       62,  -61,  -61,  -61,  -61,  -61,  -61,   63,  -61,  -61,
      -61,  -61,  -61,  -61,  -61,   63,  -61,  -61,  -61,  -61,
      -61,  -61
    },

    {
        3,  -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,
      120,  120,  -62,  121,  121,  121,  -62,  -62,  -62,  -62,
      -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,
      -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,
      -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,
      -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,

      -62,  -62
    },

    {
        3,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,
      -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,
      -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,
      -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,
      -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,
      -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,
      -63,  -63
    },

    {
        3,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,
      -64,  -64,  -64,  122,  122,  122,  -64,  -64,  -64,  122,

      122,  122,  122,  122,  122,  -64,  -64,  -64,  -64,  -64,
      -64,  -64,  -64,  -64,  -64,  -64,  122,  122,  122,  122,
      122,  122,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,
      -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,
      -64,  -64
    },

    {
        3,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,
      -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,
      -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,
      -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,
      -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,

      -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,
      -65,  -65
    },

    {
        3,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,
      -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,
      -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,
      -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,
      -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,
      -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,
      -66,  -66
    },

    {
        3,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,

      -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,
      -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,
      -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,
      -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,
      -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,
      -67,  -67
    },

    {
        3,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,
      -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,
      -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,
      -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,

      -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,
      -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,
      -68,  -68
    },

    {
        3,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,
      -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,
      -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,
      -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,
      -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,
      -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,
      -69,  -69

    },

    {
        3,  -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,
      -70,  -70,  -70,   70,   70,   70,  -70,  -70,  -70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -70
    },

    {
        3,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,
      -71,  -71,  -71,   70,   70,   70,  -71,  -71,  -71,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,  -71,   70,   70,   70,   70,   70,
      123,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -71
    },

    {
        3,  -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,
      -72,  -72,  -72,   70,   70,   70,  -72,  -72,  -72,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -72,   70,   70,   70,   70,   70,
       70,  124,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,  -72
    },

    {
        3,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,
      -73,  -73,  -73,   70,   70,   70,  -73,  -73,  -73,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -73,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  125,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -73
    },

    {
        3,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,
      -74,  -74,  -74,   70,   70,   70,  -74,  -74,  -74,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -74,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,  126,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -74
    },

    {
        3,  -75,  -75,  -75,  -75,  -75,  -75,  -75,  -75,  -75,
      -75,  -75,  -75,   70,   70,   70,  -75,  -75,  -75,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -75,   70,   70,   70,  127,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -75
    },

    {
        3,  -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,
      -76,  -76,  -76,   70,   70,   70,  -76,  -76,  -76,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -76,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,  128,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -76
    },

    {
        3,  -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,

      -77,  -77,  -77,   70,   70,   70,  -77,  -77,  -77,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -77,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  129,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -77
    },

    {
        3,  -78,  -78,  -78,  -78,  -78,  -78,  -78,  -78,  -78,
      -78,  -78,  -78,   70,   70,   70,  -78,  -78,  -78,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -78,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,  130,   70,   70,   70,   70,   70,   70,
       70,  -78
    },

    {
        3,  -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,
      -79,  -79,  -79,   70,   70,   70,  -79,  -79,  -79,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -79,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,  131,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -79

    },

    {
        3,  -80,  -80,  -80,  -80,  -80,  -80,  -80,  -80,  -80,
      -80,  -80,  -80,   70,   70,   70,  -80,  -80,  -80,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -80,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,  132,   70,
       70,  -80
    },

    {
        3,  -81,  -81,  -81,  -81,  -81,  -81,  -81,  -81,  -81,
      -81,  -81,  -81,   70,   70,   70,  -81,  -81,  -81,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,  -81,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  133,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -81
    },

    {
        3,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,
      -82,  -82,  -82,   70,   70,   70,  -82,  -82,  -82,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -82,   70,   70,   70,   70,   70,
      134,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,  -82
    },

    {
        3,  -83,  -83,  -83,  -83,  -83,  -83,  -83,  -83,  -83,
      -83,  -83,  -83,   70,   70,   70,  -83,  -83,  -83,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -83,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,  135,   70,   70,   70,   70,
       70,  -83
    },

    {
        3,  -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,
      -84,  -84,  -84,   70,   70,   70,  -84,  -84,  -84,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -84,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,  136,   70,  137,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -84
    },

    {
        3,  -85,  -85,  -85,  -85,  -85,  -85,  -85,  -85,  -85,
      -85,  -85,  -85,   70,   70,   70,  -85,  -85,  -85,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -85,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,  138,   70,   70,   70,   70,   70,   70,
       70,  -85
    },

    {
        3,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,
      -86,  -86,  -86,   70,   70,   70,  -86,  -86,  -86,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -86,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -86
    },

    {
        3,  -87,  -87,  -87,  -87,  -87,  -87,  -87,  -87,  -87,

      -87,  -87,  -87,   70,   70,   70,  -87,  -87,  -87,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -87,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,  139,   70,   70,   70,   70,   70,   70,
       70,  -87
    },

    {
        3,  -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,
      -88,  -88,  -88,   70,   70,   70,  -88,  -88,  -88,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -88,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  140,   70,   70,   70,   70,   70,
       70,  -88
    },

    {
        3,  -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,
      -89,  -89,  -89,   70,   70,   70,  -89,  -89,  -89,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -89,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,  141,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -89

    },

    {
        3,  -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,
      -90,  -90,  -90,   70,   70,   70,  -90,  -90,  -90,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -90,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  142,   70,   70,   70,   70,   70,   70,   70,
       70,  -90
    },

    {
        3,  -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,
      -91,  -91,  -91,   70,   70,   70,  -91,  -91,  -91,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,  -91,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
      143,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -91
    },

    {
        3,  -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,
      -92,  -92,  -92,   70,   70,   70,  -92,  -92,  -92,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -92,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,  -92
    },

    {
        3,  -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,
      -93,  -93,  -93,   70,   70,   70,  -93,  -93,  -93,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -93,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,  144,   70,   70,
      145,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -93
    },

    {
        3,  -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,
      -94,  -94,  -94,   70,   70,   70,  -94,  -94,  -94,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -94,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,  146,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -94
    },

    {
        3,  -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,
      -95,  -95,  -95,   70,   70,   70,  -95,  -95,  -95,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -95,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,  147,   70,   70,   70,  148,   70,
       70,  -95
    },

    {
        3,  -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,
      -96,  -96,  -96,   70,   70,   70,  -96,  -96,  -96,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -96,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  149,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -96
    },

    {
        3,  -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,

      -97,  -97,  -97,   70,   70,   70,  -97,  -97,  -97,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -97,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  150,   70,   70,   70,   70,   70,
       70,  -97
    },

    {
        3,  -98,  -98,  -98,  -98,  -98,  -98,  -98,  -98,  -98,
      -98,  -98,  -98,   70,   70,   70,  -98,  -98,  -98,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -98,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  151,   70,   70,   70,   70,   70,   70,   70,
       70,  -98
    },

    {
        3,  -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,
      -99,  -99,  -99,   70,   70,   70,  -99,  -99,  -99,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  -99,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  152,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  -99

    },

    {
        3, -100, -100, -100, -100, -100, -100, -100, -100, -100,
     -100, -100, -100,   70,   70,   70, -100, -100, -100,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -100,   70,   70,   70,   70,   70,
       70,   70,  153,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  154,   70,   70,   70,   70,   70,
       70, -100
    },

    {
        3, -101, -101, -101, -101, -101, -101, -101, -101, -101,
     -101, -101, -101,   70,   70,   70, -101, -101, -101,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -101,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,  155,   70,   70,
       70, -101
    },

    {
        3, -102, -102, -102, -102, -102, -102, -102, -102, -102,
     -102, -102, -102,   70,   70,   70, -102, -102, -102,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -102,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,  156,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70, -102
    },

    {
        3, -103, -103, -103, -103, -103, -103, -103, -103, -103,
     -103, -103, -103,   70,   70,   70, -103, -103, -103,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -103,   70,  157,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -103
    },

    {
        3, -104, -104, -104, -104, -104, -104, -104, -104, -104,
     -104, -104, -104,   70,   70,   70, -104, -104, -104,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -104,   70,  158,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  159,   70,   70,   70,   70,   70,   70,   70,
       70, -104
    },

    {
        3, -105, -105, -105, -105, -105, -105, -105, -105, -105,
     -105, -105, -105,   70,   70,   70, -105, -105, -105,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -105,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,  160,   70,   70,   70,   70,   70,   70,   70,
       70, -105
    },

    {
        3, -106, -106, -106, -106, -106, -106, -106, -106, -106,
     -106, -106, -106,   70,   70,   70, -106, -106, -106,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -106,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  161,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,  162,   70,   70,   70,   70,
       70, -106
    },

    {
        3, -107, -107, -107, -107, -107, -107, -107, -107, -107,

     -107, -107, -107,   70,   70,   70, -107, -107, -107,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -107,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  163,   70,   70,   70,   70,   70,
       70,   70,   70,  164,   70,   70,   70,   70,   70,   70,
       70, -107
    },

    {
        3, -108, -108, -108, -108, -108, -108, -108, -108, -108,
     -108, -108, -108,   70,   70,   70, -108, -108, -108,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -108,   70,   70,   70,  165,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -108
    },

    {
        3, -109, -109, -109, -109, -109, -109, -109, -109, -109,
     -109, -109, -109,   70,   70,   70, -109, -109, -109,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -109,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  166,   70,   70,  167,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -109

    },

    {
        3, -110, -110, -110, -110, -110, -110, -110, -110, -110,
     -110, -110, -110,   70,   70,   70, -110, -110, -110,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -110,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  168,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -110
    },

    {
        3, -111, -111, -111, -111, -111, -111, -111, -111, -111,
     -111, -111, -111, -111, -111, -111, -111, -111, -111, -111,
     -111, -111, -111, -111, -111, -111, -111, -111, -111, -111,

     -111, -111, -111, -111, -111, -111, -111, -111, -111, -111,
     -111, -111, -111, -111, -111, -111, -111, -111, -111, -111,
     -111, -111, -111, -111, -111, -111, -111, -111, -111, -111,
     -111, -111
    },

    {
        3,   51,   51, -112,   51,   52,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   53,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,

       51,   51
    },

    {
        3, -113, -113, -113, -113, -113, -113, -113, -113, -113,
     -113, -113, -113, -113, -113, -113, -113, -113, -113, -113,
     -113, -113, -113, -113, -113, -113, -113, -113, -113, -113,
     -113, -113, -113, -113, -113, -113, -113, -113, -113, -113,
     -113, -113, -113, -113, -113, -113, -113, -113, -113, -113,
     -113, -113, -113, -113, -113, -113, -113, -113, -113, -113,
     -113, -113
    },

    {
        3, -114, -114, -114, -114, -114, -114, -114,  113, -114,
     -114, -114, -114, -114, -114, -114, -114, -114, -114, -114,

     -114, -114, -114, -114, -114, -114, -114, -114, -114, -114,
     -114, -114, -114, -114, -114, -114, -114, -114, -114, -114,
     -114, -114, -114, -114, -114, -114, -114, -114, -114, -114,
     -114, -114, -114, -114, -114, -114, -114, -114, -114, -114,
     -114, -114
    },

    {
        3, -115, -115, -115, -115, -115, -115, -115, -115, -115,
      169,  169, -115,  170,  170,  170, -115, -115, -115, -115,
     -115, -115, -115, -115, -115, -115, -115, -115, -115, -115,
     -115, -115, -115, -115, -115, -115, -115, -115, -115, -115,
     -115, -115, -115, -115, -115, -115, -115, -115, -115, -115,

     -115, -115, -115, -115, -115, -115, -115, -115, -115, -115,
     -115, -115
    },

    {
        3, -116, -116, -116, -116, -116, -116, -116, -116, -116,
     -116, -116, -116, -116, -116, -116, -116, -116, -116, -116,
     -116, -116, -116, -116, -116, -116, -116, -116, -116, -116,
     -116, -116, -116, -116, -116, -116, -116, -116, -116, -116,
     -116, -116, -116, -116, -116, -116, -116, -116, -116, -116,
     -116, -116, -116, -116, -116, -116, -116, -116, -116, -116,
     -116, -116
    },

    {
        3, -117, -117, -117, -117, -117, -117, -117, -117, -117,

     -117, -117, -117,  117,  117,  117, -117, -117, -117, -117,
     -117, -117, -117,  171,  172, -117, -117, -117, -117, -117,
     -117, -117, -117, -117, -117, -117, -117, -117, -117, -117,
      171,  172, -117, -117, -117, -117, -117, -117, -117, -117,
     -117, -117, -117, -117, -117, -117, -117, -117, -117, -117,
     -117, -117
    },

    {
        3, -118, -118, -118, -118, -118, -118, -118, -118, -118,
      173,  173, -118,  174,  174,  174, -118, -118, -118, -118,
     -118, -118, -118, -118, -118, -118, -118, -118, -118, -118,
     -118, -118, -118, -118, -118, -118, -118, -118, -118, -118,

     -118, -118, -118, -118, -118, -118, -118, -118, -118, -118,
     -118, -118, -118, -118, -118, -118, -118, -118, -118, -118,
     -118, -118
    },

    {
        3, -119, -119, -119, -119, -119, -119, -119, -119, -119,
     -119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
     -119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
     -119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
     -119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
     -119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
     -119, -119

    },

    {
        3, -120, -120, -120, -120, -120, -120, -120, -120, -120,
     -120, -120, -120,  121,  121,  121, -120, -120, -120, -120,
     -120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
     -120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
     -120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
     -120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
     -120, -120
    },

    {
        3, -121, -121, -121, -121, -121, -121, -121, -121, -121,
     -121, -121, -121,  121,  121,  121, -121, -121, -121, -121,
     -121, -121, -121, -121,  175, -121, -121, -121, -121, -121,

     -121, -121, -121, -121, -121, -121, -121, -121, -121, -121,
     -121,  175, -121, -121, -121, -121, -121, -121, -121, -121,
     -121, -121, -121, -121, -121, -121, -121, -121, -121, -121,
     -121, -121
    },

    {
        3, -122, -122, -122, -122, -122, -122, -122, -122, -122,
     -122, -122, -122,  122,  122,  122, -122, -122, -122,  122,
      122,  122,  122,  122,  122, -122, -122, -122, -122, -122,
     -122, -122,  176, -122, -122, -122,  122,  122,  122,  122,
      122,  122, -122, -122, -122, -122, -122, -122, -122, -122,
     -122, -122, -122, -122, -122,  176, -122, -122, -122, -122,

     -122, -122
    },

    {
        3, -123, -123, -123, -123, -123, -123, -123, -123, -123,
     -123, -123, -123,   70,   70,   70, -123, -123, -123,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -123,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,  177,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -123
    },

    {
        3, -124, -124, -124, -124, -124, -124, -124, -124, -124,
     -124, -124, -124,   70,   70,   70, -124, -124, -124,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -124,   70,   70,   70,   70,   70,
       70,  178,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -124
    },

    {
        3, -125, -125, -125, -125, -125, -125, -125, -125, -125,
     -125, -125, -125,   70,   70,   70, -125, -125, -125,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -125,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,  179,   70,   70,   70,   70,   70,
       70, -125
    },

    {
        3, -126, -126, -126, -126, -126, -126, -126, -126, -126,
     -126, -126, -126,   70,   70,   70, -126, -126, -126,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -126,   70,   70,   70,   70,   70,
      180,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -126
    },

    {
        3, -127, -127, -127, -127, -127, -127, -127, -127, -127,

     -127, -127, -127,   70,   70,   70, -127, -127, -127,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -127,   70,  181,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -127
    },

    {
        3, -128, -128, -128, -128, -128, -128, -128, -128, -128,
     -128, -128, -128,   70,   70,   70, -128, -128, -128,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  182,   70,   70, -128,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -128
    },

    {
        3, -129, -129, -129, -129, -129, -129, -129, -129, -129,
     -129, -129, -129,   70,   70,   70, -129, -129, -129,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -129,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,  183,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -129

    },

    {
        3, -130, -130, -130, -130, -130, -130, -130, -130, -130,
     -130, -130, -130,   70,   70,   70, -130, -130, -130,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -130,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  184,   70,   70,   70,   70,   70,
       70, -130
    },

    {
        3, -131, -131, -131, -131, -131, -131, -131, -131, -131,
     -131, -131, -131,   70,   70,   70, -131, -131, -131,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -131,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  185,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -131
    },

    {
        3, -132, -132, -132, -132, -132, -132, -132, -132, -132,
     -132, -132, -132,   70,   70,   70, -132, -132, -132,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -132,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  186,   70,   70,   70,   70,   70,

       70, -132
    },

    {
        3, -133, -133, -133, -133, -133, -133, -133, -133, -133,
     -133, -133, -133,   70,   70,   70, -133, -133, -133,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -133,   70,  187,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -133
    },

    {
        3, -134, -134, -134, -134, -134, -134, -134, -134, -134,
     -134, -134, -134,   70,   70,   70, -134, -134, -134,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -134,   70,  188,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -134
    },

    {
        3, -135, -135, -135, -135, -135, -135, -135, -135, -135,
     -135, -135, -135,   70,   70,   70, -135, -135, -135,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -135,   70,   70,   70,   70,   70,
       70,  189,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -135
    },

    {
        3, -136, -136, -136, -136, -136, -136, -136, -136, -136,
     -136, -136, -136,   70,   70,   70, -136, -136, -136,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -136,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,  190,   70,   70,   70,   70,
       70, -136
    },

    {
        3, -137, -137, -137, -137, -137, -137, -137, -137, -137,

     -137, -137, -137,   70,   70,   70, -137, -137, -137,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -137,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,  191,  192,   70,   70,   70,   70,   70,
       70, -137
    },

    {
        3, -138, -138, -138, -138, -138, -138, -138, -138, -138,
     -138, -138, -138,   70,   70,   70, -138, -138, -138,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -138,   70,   70,   70,  193,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -138
    },

    {
        3, -139, -139, -139, -139, -139, -139, -139, -139, -139,
     -139, -139, -139,   70,   70,   70, -139, -139, -139,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -139,   70,   70,   70,   70,   70,
      194,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -139

    },

    {
        3, -140, -140, -140, -140, -140, -140, -140, -140, -140,
     -140, -140, -140,   70,   70,   70, -140, -140, -140,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -140,   70,   70,   70,   70,   70,
      195,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -140
    },

    {
        3, -141, -141, -141, -141, -141, -141, -141, -141, -141,
     -141, -141, -141,   70,   70,   70, -141, -141, -141,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -141,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,  196,   70,   70,   70,   70,   70,   70,
       70, -141
    },

    {
        3, -142, -142, -142, -142, -142, -142, -142, -142, -142,
     -142, -142, -142,   70,   70,   70, -142, -142, -142,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -142,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70, -142
    },

    {
        3, -143, -143, -143, -143, -143, -143, -143, -143, -143,
     -143, -143, -143,   70,   70,   70, -143, -143, -143,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -143,   70,   70,  197,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -143
    },

    {
        3, -144, -144, -144, -144, -144, -144, -144, -144, -144,
     -144, -144, -144,   70,   70,   70, -144, -144, -144,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -144,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  198,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -144
    },

    {
        3, -145, -145, -145, -145, -145, -145, -145, -145, -145,
     -145, -145, -145,   70,   70,   70, -145, -145, -145,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -145,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,  199,   70,   70,   70,   70,
       70, -145
    },

    {
        3, -146, -146, -146, -146, -146, -146, -146, -146, -146,
     -146, -146, -146,   70,   70,   70, -146, -146, -146,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -146,   70,   70,   70,   70,   70,
      200,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -146
    },

    {
        3, -147, -147, -147, -147, -147, -147, -147, -147, -147,

     -147, -147, -147,   70,   70,   70, -147, -147, -147,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -147,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  201,   70,   70,   70,   70,   70,   70,   70,
       70, -147
    },

    {
        3, -148, -148, -148, -148, -148, -148, -148, -148, -148,
     -148, -148, -148,   70,   70,   70, -148, -148, -148,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -148,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,  202,   70,   70,   70,
       70, -148
    },

    {
        3, -149, -149, -149, -149, -149, -149, -149, -149, -149,
     -149, -149, -149,   70,   70,   70, -149, -149, -149,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -149,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,  203,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -149

    },

    {
        3, -150, -150, -150, -150, -150, -150, -150, -150, -150,
     -150, -150, -150,   70,   70,   70, -150, -150, -150,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -150,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -150
    },

    {
        3, -151, -151, -151, -151, -151, -151, -151, -151, -151,
     -151, -151, -151,   70,   70,   70, -151, -151, -151,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -151,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,  204,   70,   70,   70,   70,   70,   70,
       70, -151
    },

    {
        3, -152, -152, -152, -152, -152, -152, -152, -152, -152,
     -152, -152, -152,   70,   70,   70, -152, -152, -152,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -152,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,  205,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70, -152
    },

    {
        3, -153, -153, -153, -153, -153, -153, -153, -153, -153,
     -153, -153, -153,   70,   70,   70, -153, -153, -153,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -153,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  206,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -153
    },

    {
        3, -154, -154, -154, -154, -154, -154, -154, -154, -154,
     -154, -154, -154,   70,   70,   70, -154, -154, -154,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -154,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,  207,   70,   70,   70,   70,
       70, -154
    },

    {
        3, -155, -155, -155, -155, -155, -155, -155, -155, -155,
     -155, -155, -155,   70,   70,   70, -155, -155, -155,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -155,  208,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -155
    },

    {
        3, -156, -156, -156, -156, -156, -156, -156, -156, -156,
     -156, -156, -156,   70,   70,   70, -156, -156, -156,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -156,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  209,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -156
    },

    {
        3, -157, -157, -157, -157, -157, -157, -157, -157, -157,

     -157, -157, -157,   70,   70,   70, -157, -157, -157,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -157,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  210,   70,   70,   70,   70,   70,   70,   70,
       70, -157
    },

    {
        3, -158, -158, -158, -158, -158, -158, -158, -158, -158,
     -158, -158, -158,   70,   70,   70, -158, -158, -158,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -158,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  211,   70,   70,   70,   70,   70,
       70, -158
    },

    {
        3, -159, -159, -159, -159, -159, -159, -159, -159, -159,
     -159, -159, -159,   70,   70,   70, -159, -159, -159,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -159,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,  212,   70,   70,   70,   70,
       70, -159

    },

    {
        3, -160, -160, -160, -160, -160, -160, -160, -160, -160,
     -160, -160, -160,   70,   70,   70, -160, -160, -160,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -160,   70,   70,   70,   70,   70,
       70,   70,  213,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -160
    },

    {
        3, -161, -161, -161, -161, -161, -161, -161, -161, -161,
     -161, -161, -161,   70,   70,   70, -161, -161, -161,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -161,   70,  214,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -161
    },

    {
        3, -162, -162, -162, -162, -162, -162, -162, -162, -162,
     -162, -162, -162,   70,   70,   70, -162, -162, -162,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -162,   70,   70,   70,   70,   70,
      215,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70, -162
    },

    {
        3, -163, -163, -163, -163, -163, -163, -163, -163, -163,
     -163, -163, -163,   70,   70,   70, -163, -163, -163,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -163,   70,   70,   70,   70,   70,
       70,  216,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -163
    },

    {
        3, -164, -164, -164, -164, -164, -164, -164, -164, -164,
     -164, -164, -164,   70,   70,   70, -164, -164, -164,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -164,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  217,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -164
    },

    {
        3, -165, -165, -165, -165, -165, -165, -165, -165, -165,
     -165, -165, -165,   70,   70,   70, -165, -165, -165,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -165,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,  218,   70,   70,   70,   70,   70,
       70, -165
    },

    {
        3, -166, -166, -166, -166, -166, -166, -166, -166, -166,
     -166, -166, -166,   70,   70,   70, -166, -166, -166,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -166,   70,   70,   70,   70,  219,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -166
    },

    {
        3, -167, -167, -167, -167, -167, -167, -167, -167, -167,

     -167, -167, -167,   70,   70,   70, -167, -167, -167,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -167,   70,  220,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -167
    },

    {
        3, -168, -168, -168, -168, -168, -168, -168, -168, -168,
     -168, -168, -168,   70,   70,   70, -168, -168, -168,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -168,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,  221,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -168
    },

    {
        3, -169, -169, -169, -169, -169, -169, -169, -169, -169,
     -169, -169, -169,  170,  170,  170, -169, -169, -169, -169,
     -169, -169, -169, -169, -169, -169, -169, -169, -169, -169,
     -169, -169, -169, -169, -169, -169, -169, -169, -169, -169,
     -169, -169, -169, -169, -169, -169, -169, -169, -169, -169,
     -169, -169, -169, -169, -169, -169, -169, -169, -169, -169,
     -169, -169

    },

    {
        3, -170, -170, -170, -170, -170, -170, -170, -170, -170,
     -170, -170, -170,  170,  170,  170, -170, -170, -170, -170,
     -170, -170, -170, -170,  116, -170, -170, -170, -170, -170,
     -170, -170, -170, -170, -170, -170, -170, -170, -170, -170,
     -170,  116, -170, -170, -170, -170, -170, -170, -170, -170,
     -170, -170, -170, -170, -170, -170, -170, -170, -170, -170,
     -170, -170
    },

    {
        3, -171, -171, -171, -171, -171, -171, -171, -171, -171,
      222,  222, -171,  223,  223,  223, -171, -171, -171, -171,
     -171, -171, -171, -171, -171, -171, -171, -171, -171, -171,

     -171, -171, -171, -171, -171, -171, -171, -171, -171, -171,
     -171, -171, -171, -171, -171, -171, -171, -171, -171, -171,
     -171, -171, -171, -171, -171, -171, -171, -171, -171, -171,
     -171, -171
    },

    {
        3, -172, -172, -172, -172, -172, -172, -172, -172, -172,
     -172, -172, -172, -172, -172, -172, -172, -172, -172, -172,
     -172, -172, -172, -172, -172, -172, -172, -172, -172, -172,
     -172, -172, -172, -172, -172, -172, -172, -172, -172, -172,
     -172, -172, -172, -172, -172, -172, -172, -172, -172, -172,
     -172, -172, -172, -172, -172, -172, -172, -172, -172, -172,

     -172, -172
    },

    {
        3, -173, -173, -173, -173, -173, -173, -173, -173, -173,
     -173, -173, -173,  174,  174,  174, -173, -173, -173, -173,
     -173, -173, -173, -173, -173, -173, -173, -173, -173, -173,
     -173, -173, -173, -173, -173, -173, -173, -173, -173, -173,
     -173, -173, -173, -173, -173, -173, -173, -173, -173, -173,
     -173, -173, -173, -173, -173, -173, -173, -173, -173, -173,
     -173, -173
    },

    {
        3, -174, -174, -174, -174, -174, -174, -174, -174, -174,
     -174, -174, -174,  174,  174,  174, -174, -174, -174, -174,

     -174, -174, -174, -174,  119, -174, -174, -174, -174, -174,
     -174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
     -174,  119, -174, -174, -174, -174, -174, -174, -174, -174,
     -174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
     -174, -174
    },

    {
        3, -175, -175, -175, -175, -175, -175, -175, -175, -175,
     -175, -175, -175, -175, -175, -175, -175, -175, -175, -175,
     -175, -175, -175, -175, -175, -175, -175, -175, -175, -175,
     -175, -175, -175, -175, -175, -175, -175, -175, -175, -175,
     -175, -175, -175, -175, -175, -175, -175, -175, -175, -175,

     -175, -175, -175, -175, -175, -175, -175, -175, -175, -175,
     -175, -175
    },

    {
        3, -176, -176, -176, -176, -176, -176, -176, -176, -176,
     -176, -176, -176, -176, -176, -176, -176, -176, -176, -176,
     -176, -176, -176, -176, -176, -176, -176, -176, -176, -176,
     -176, -176, -176, -176, -176, -176, -176, -176, -176, -176,
     -176, -176, -176, -176, -176, -176, -176, -176, -176, -176,
     -176, -176, -176, -176, -176, -176, -176, -176, -176, -176,
     -176, -176
    },

    {
        3, -177, -177, -177, -177, -177, -177, -177, -177, -177,

     -177, -177, -177,   70,   70,   70, -177, -177, -177,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -177,   70,   70,   70,   70,  224,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -177
    },

    {
        3, -178, -178, -178, -178, -178, -178, -178, -178, -178,
     -178, -178, -178,   70,   70,   70, -178, -178, -178,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -178,   70,   70,   70,   70,   70,

      225,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -178
    },

    {
        3, -179, -179, -179, -179, -179, -179, -179, -179, -179,
     -179, -179, -179,   70,   70,   70, -179, -179, -179,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -179,   70,   70,   70,   70,   70,
       70,   70,   70,  226,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -179

    },

    {
        3, -180, -180, -180, -180, -180, -180, -180, -180, -180,
     -180, -180, -180,   70,   70,   70, -180, -180, -180,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
      227,   70,   70,   70, -180,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -180
    },

    {
        3, -181, -181, -181, -181, -181, -181, -181, -181, -181,
     -181, -181, -181,   70,   70,   70, -181, -181, -181,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -181,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,  228,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -181
    },

    {
        3, -182, -182, -182, -182, -182, -182, -182, -182, -182,
     -182, -182, -182,   70,   70,   70, -182, -182, -182,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -182,   70,   70,   70,   70,   70,
       70,   70,   70,  229,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70, -182
    },

    {
        3, -183, -183, -183, -183, -183, -183, -183, -183, -183,
     -183, -183, -183,   70,   70,   70, -183, -183, -183,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -183,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  230,   70,   70,   70,   70,   70,
       70, -183
    },

    {
        3, -184, -184, -184, -184, -184, -184, -184, -184, -184,
     -184, -184, -184,   70,   70,   70, -184, -184, -184,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -184,   70,   70,   70,   70,   70,
      231,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -184
    },

    {
        3, -185, -185, -185, -185, -185, -185, -185, -185, -185,
     -185, -185, -185,   70,   70,   70, -185, -185, -185,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -185,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,  232,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -185
    },

    {
        3, -186, -186, -186, -186, -186, -186, -186, -186, -186,
     -186, -186, -186,   70,   70,   70, -186, -186, -186,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -186,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,  233,   70,   70,   70,   70,
       70, -186
    },

    {
        3, -187, -187, -187, -187, -187, -187, -187, -187, -187,

     -187, -187, -187,   70,   70,   70, -187, -187, -187,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -187,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,  234,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -187
    },

    {
        3, -188, -188, -188, -188, -188, -188, -188, -188, -188,
     -188, -188, -188,   70,   70,   70, -188, -188, -188,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -188,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,  235,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -188
    },

    {
        3, -189, -189, -189, -189, -189, -189, -189, -189, -189,
     -189, -189, -189,   70,   70,   70, -189, -189, -189,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -189,   70,   70,   70,   70,   70,
       70,  236,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -189

    },

    {
        3, -190, -190, -190, -190, -190, -190, -190, -190, -190,
     -190, -190, -190,   70,   70,   70, -190, -190, -190,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -190,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,  237,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -190
    },

    {
        3, -191, -191, -191, -191, -191, -191, -191, -191, -191,
     -191, -191, -191,   70,   70,   70, -191, -191, -191,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -191,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  150,   70,   70,   70,   70,   70,
       70, -191
    },

    {
        3, -192, -192, -192, -192, -192, -192, -192, -192, -192,
     -192, -192, -192,   70,   70,   70, -192, -192, -192,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -192,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  238,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70, -192
    },

    {
        3, -193, -193, -193, -193, -193, -193, -193, -193, -193,
     -193, -193, -193,   70,   70,   70, -193, -193, -193,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -193,   70,  239,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -193
    },

    {
        3, -194, -194, -194, -194, -194, -194, -194, -194, -194,
     -194, -194, -194,   70,   70,   70, -194, -194, -194,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -194,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -194
    },

    {
        3, -195, -195, -195, -195, -195, -195, -195, -195, -195,
     -195, -195, -195,   70,   70,   70, -195, -195, -195,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -195,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,  240,   70,   70,   70,   70,   70,   70,   70,
       70, -195
    },

    {
        3, -196, -196, -196, -196, -196, -196, -196, -196, -196,
     -196, -196, -196,   70,   70,   70, -196, -196, -196,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -196,   70,   70,   70,   70,   70,
      241,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -196
    },

    {
        3, -197, -197, -197, -197, -197, -197, -197, -197, -197,

     -197, -197, -197,   70,   70,   70, -197, -197, -197,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -197,   70,  242,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -197
    },

    {
        3, -198, -198, -198, -198, -198, -198, -198, -198, -198,
     -198, -198, -198,   70,   70,   70, -198, -198, -198,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -198,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,  243,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -198
    },

    {
        3, -199, -199, -199, -199, -199, -199, -199, -199, -199,
     -199, -199, -199,   70,   70,   70, -199, -199, -199,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -199,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  150,   70,   70,   70,   70,   70,
       70, -199

    },

    {
        3, -200, -200, -200, -200, -200, -200, -200, -200, -200,
     -200, -200, -200,   70,   70,   70, -200, -200, -200,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -200,   70,  244,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -200
    },

    {
        3, -201, -201, -201, -201, -201, -201, -201, -201, -201,
     -201, -201, -201,   70,   70,   70, -201, -201, -201,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -201,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  245,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -201
    },

    {
        3, -202, -202, -202, -202, -202, -202, -202, -202, -202,
     -202, -202, -202,   70,   70,   70, -202, -202, -202,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -202,   70,   70,   70,   70,   70,
      246,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70, -202
    },

    {
        3, -203, -203, -203, -203, -203, -203, -203, -203, -203,
     -203, -203, -203,   70,   70,   70, -203, -203, -203,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -203,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  247,   70,   70,   70,   70,   70,
       70, -203
    },

    {
        3, -204, -204, -204, -204, -204, -204, -204, -204, -204,
     -204, -204, -204,   70,   70,   70, -204, -204, -204,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -204,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  248,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -204
    },

    {
        3, -205, -205, -205, -205, -205, -205, -205, -205, -205,
     -205, -205, -205,   70,   70,   70, -205, -205, -205,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -205,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,  150,   70,   70,   70,   70,   70,
       70, -205
    },

    {
        3, -206, -206, -206, -206, -206, -206, -206, -206, -206,
     -206, -206, -206,   70,   70,   70, -206, -206, -206,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -206,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,  249,   70,   70,   70,   70,   70,   70,
       70, -206
    },

    {
        3, -207, -207, -207, -207, -207, -207, -207, -207, -207,

     -207, -207, -207,   70,   70,   70, -207, -207, -207,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -207,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  250,   70,   70,   70,   70,   70,   70,   70,
       70, -207
    },

    {
        3, -208, -208, -208, -208, -208, -208, -208, -208, -208,
     -208, -208, -208,   70,   70,   70, -208, -208, -208,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -208,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,  251,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -208
    },

    {
        3, -209, -209, -209, -209, -209, -209, -209, -209, -209,
     -209, -209, -209,   70,   70,   70, -209, -209, -209,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -209,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,  252,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -209

    },

    {
        3, -210, -210, -210, -210, -210, -210, -210, -210, -210,
     -210, -210, -210,   70,   70,   70, -210, -210, -210,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -210,   70,   70,   70,   70,   70,
      253,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -210
    },

    {
        3, -211, -211, -211, -211, -211, -211, -211, -211, -211,
     -211, -211, -211,   70,   70,   70, -211, -211, -211,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -211,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  254,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -211
    },

    {
        3, -212, -212, -212, -212, -212, -212, -212, -212, -212,
     -212, -212, -212,   70,   70,   70, -212, -212, -212,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -212,   70,   70,   70,  255,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70, -212
    },

    {
        3, -213, -213, -213, -213, -213, -213, -213, -213, -213,
     -213, -213, -213,   70,   70,   70, -213, -213, -213,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -213,   70,   70,   70,   70,   70,
      256,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -213
    },

    {
        3, -214, -214, -214, -214, -214, -214, -214, -214, -214,
     -214, -214, -214,   70,   70,   70, -214, -214, -214,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -214,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,  257,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -214
    },

    {
        3, -215, -215, -215, -215, -215, -215, -215, -215, -215,
     -215, -215, -215,   70,   70,   70, -215, -215, -215,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -215,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -215
    },

    {
        3, -216, -216, -216, -216, -216, -216, -216, -216, -216,
     -216, -216, -216,   70,   70,   70, -216, -216, -216,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -216,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
      258,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -216
    },

    {
        3, -217, -217, -217, -217, -217, -217, -217, -217, -217,

     -217, -217, -217,   70,   70,   70, -217, -217, -217,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -217,   70,   70,   70,   70,   70,
       70,   70,  259,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -217
    },

    {
        3, -218, -218, -218, -218, -218, -218, -218, -218, -218,
     -218, -218, -218,   70,   70,   70, -218, -218, -218,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -218,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
      260,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -218
    },

    {
        3, -219, -219, -219, -219, -219, -219, -219, -219, -219,
     -219, -219, -219,   70,   70,   70, -219, -219, -219,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -219,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -219

    },

    {
        3, -220, -220, -220, -220, -220, -220, -220, -220, -220,
     -220, -220, -220,   70,   70,   70, -220, -220, -220,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -220,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  261,   70,   70,   70,   70,   70,
       70, -220
    },

    {
        3, -221, -221, -221, -221, -221, -221, -221, -221, -221,
     -221, -221, -221,   70,   70,   70, -221, -221, -221,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -221,   70,   70,   70,   70,   70,
      262,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -221
    },

    {
        3, -222, -222, -222, -222, -222, -222, -222, -222, -222,
     -222, -222, -222,  223,  223,  223, -222, -222, -222, -222,
     -222, -222, -222, -222, -222, -222, -222, -222, -222, -222,
     -222, -222, -222, -222, -222, -222, -222, -222, -222, -222,
     -222, -222, -222, -222, -222, -222, -222, -222, -222, -222,
     -222, -222, -222, -222, -222, -222, -222, -222, -222, -222,

     -222, -222
    },

    {
        3, -223, -223, -223, -223, -223, -223, -223, -223, -223,
     -223, -223, -223,  223,  223,  223, -223, -223, -223, -223,
     -223, -223, -223, -223,  172, -223, -223, -223, -223, -223,
     -223, -223, -223, -223, -223, -223, -223, -223, -223, -223,
     -223,  172, -223, -223, -223, -223, -223, -223, -223, -223,
     -223, -223, -223, -223, -223, -223, -223, -223, -223, -223,
     -223, -223
    },

    {
        3, -224, -224, -224, -224, -224, -224, -224, -224, -224,
     -224, -224, -224,   70,   70,   70, -224, -224, -224,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
      263,   70,   70,   70, -224,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -224
    },

    {
        3, -225, -225, -225, -225, -225, -225, -225, -225, -225,
     -225, -225, -225,   70,   70,   70, -225, -225, -225,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -225,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,  264,   70,   70,   70,   70,   70,   70,   70,
       70, -225
    },

    {
        3, -226, -226, -226, -226, -226, -226, -226, -226, -226,
     -226, -226, -226,   70,   70,   70, -226, -226, -226,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
      265,   70,   70,   70, -226,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -226
    },

    {
        3, -227, -227, -227, -227, -227, -227, -227, -227, -227,

     -227, -227, -227,   70,   70,   70, -227, -227, -227,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -227,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  266,   70,   70,   70,   70,   70,
       70, -227
    },

    {
        3, -228, -228, -228, -228, -228, -228, -228, -228, -228,
     -228, -228, -228,   70,   70,   70, -228, -228, -228,   70,
       70,   70,  267,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -228,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -228
    },

    {
        3, -229, -229, -229, -229, -229, -229, -229, -229, -229,
     -229, -229, -229,   70,   70,   70, -229, -229, -229,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -229,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  268,   70,   70,   70,   70,   70,   70,   70,
       70, -229

    },

    {
        3, -230, -230, -230, -230, -230, -230, -230, -230, -230,
     -230, -230, -230,   70,   70,   70, -230, -230, -230,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
      269,   70,   70,   70, -230,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -230
    },

    {
        3, -231, -231, -231, -231, -231, -231, -231, -231, -231,
     -231, -231, -231,   70,   70,   70, -231, -231, -231,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -231,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  270,   70,   70,   70,   70,   70,   70,   70,
       70, -231
    },

    {
        3, -232, -232, -232, -232, -232, -232, -232, -232, -232,
     -232, -232, -232,   70,   70,   70, -232, -232, -232,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -232,   70,   70,   70,   70,   70,
      271,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70, -232
    },

    {
        3, -233, -233, -233, -233, -233, -233, -233, -233, -233,
     -233, -233, -233,   70,   70,   70, -233, -233, -233,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -233,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  272,   70,   70,   70,   70,   70,   70,   70,
       70, -233
    },

    {
        3, -234, -234, -234, -234, -234, -234, -234, -234, -234,
     -234, -234, -234,   70,   70,   70, -234, -234, -234,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -234,   70,   70,   70,   70,   70,
       70,   70,  273,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -234
    },

    {
        3, -235, -235, -235, -235, -235, -235, -235, -235, -235,
     -235, -235, -235,   70,   70,   70, -235, -235, -235,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -235,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -235
    },

    {
        3, -236, -236, -236, -236, -236, -236, -236, -236, -236,
     -236, -236, -236,   70,   70,   70, -236, -236, -236,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -236,   70,   70,   70,   70,   70,
      274,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -236
    },

    {
        3, -237, -237, -237, -237, -237, -237, -237, -237, -237,

     -237, -237, -237,   70,   70,   70, -237, -237, -237,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -237,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,  275,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -237
    },

    {
        3, -238, -238, -238, -238, -238, -238, -238, -238, -238,
     -238, -238, -238,   70,   70,   70, -238, -238, -238,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -238,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,  276,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -238
    },

    {
        3, -239, -239, -239, -239, -239, -239, -239, -239, -239,
     -239, -239, -239,   70,   70,   70, -239, -239, -239,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -239,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  277,   70,   70,   70,   70,   70,   70,   70,
       70, -239

    },

    {
        3, -240, -240, -240, -240, -240, -240, -240, -240, -240,
     -240, -240, -240,   70,   70,   70, -240, -240, -240,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -240,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,  150,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -240
    },

    {
        3, -241, -241, -241, -241, -241, -241, -241, -241, -241,
     -241, -241, -241,   70,   70,   70, -241, -241, -241,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -241,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -241
    },

    {
        3, -242, -242, -242, -242, -242, -242, -242, -242, -242,
     -242, -242, -242,   70,   70,   70, -242, -242, -242,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -242,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,  278,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70, -242
    },

    {
        3, -243, -243, -243, -243, -243, -243, -243, -243, -243,
     -243, -243, -243,   70,   70,   70, -243, -243, -243,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -243,   70,   70,   70,   70,   70,
      150,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -243
    },

    {
        3, -244, -244, -244, -244, -244, -244, -244, -244, -244,
     -244, -244, -244,   70,   70,   70, -244, -244, -244,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -244,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  150,   70,   70,   70,   70,   70,   70,   70,
       70, -244
    },

    {
        3, -245, -245, -245, -245, -245, -245, -245, -245, -245,
     -245, -245, -245,   70,   70,   70, -245, -245, -245,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -245,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,  279,   70,
       70, -245
    },

    {
        3, -246, -246, -246, -246, -246, -246, -246, -246, -246,
     -246, -246, -246,   70,   70,   70, -246, -246, -246,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -246,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  280,   70,   70,   70,   70,   70,   70,   70,
       70, -246
    },

    {
        3, -247, -247, -247, -247, -247, -247, -247, -247, -247,

     -247, -247, -247,   70,   70,   70, -247, -247, -247,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -247,   70,   70,   70,   70,   70,
      281,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -247
    },

    {
        3, -248, -248, -248, -248, -248, -248, -248, -248, -248,
     -248, -248, -248,   70,   70,   70, -248, -248, -248,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -248,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,  282,   70,   70,   70,   70,   70,   70,
       70, -248
    },

    {
        3, -249, -249, -249, -249, -249, -249, -249, -249, -249,
     -249, -249, -249,   70,   70,   70, -249, -249, -249,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -249,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  283,   70,   70,   70,   70,   70,
       70, -249

    },

    {
        3, -250, -250, -250, -250, -250, -250, -250, -250, -250,
     -250, -250, -250,   70,   70,   70, -250, -250, -250,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -250,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,  284,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -250
    },

    {
        3, -251, -251, -251, -251, -251, -251, -251, -251, -251,
     -251, -251, -251,   70,   70,   70, -251, -251, -251,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -251,   70,  285,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -251
    },

    {
        3, -252, -252, -252, -252, -252, -252, -252, -252, -252,
     -252, -252, -252,   70,   70,   70, -252, -252, -252,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -252,   70,   70,   70,   70,   70,
      286,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70, -252
    },

    {
        3, -253, -253, -253, -253, -253, -253, -253, -253, -253,
     -253, -253, -253,   70,   70,   70, -253, -253, -253,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -253,   70,   70,   70,   70,  150,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -253
    },

    {
        3, -254, -254, -254, -254, -254, -254, -254, -254, -254,
     -254, -254, -254,   70,   70,   70, -254, -254, -254,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -254,   70,   70,   70,  150,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -254
    },

    {
        3, -255, -255, -255, -255, -255, -255, -255, -255, -255,
     -255, -255, -255,   70,   70,   70, -255, -255, -255,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -255,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,  287,   70,   70,   70,   70,   70,
       70, -255
    },

    {
        3, -256, -256, -256, -256, -256, -256, -256, -256, -256,
     -256, -256, -256,   70,   70,   70, -256, -256, -256,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -256,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  150,   70,   70,   70,   70,   70,
       70, -256
    },

    {
        3, -257, -257, -257, -257, -257, -257, -257, -257, -257,

     -257, -257, -257,   70,   70,   70, -257, -257, -257,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -257,   70,   70,   70,   70,   70,
       70,   70,  288,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -257
    },

    {
        3, -258, -258, -258, -258, -258, -258, -258, -258, -258,
     -258, -258, -258,   70,   70,   70, -258, -258, -258,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -258,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  289,   70,   70,   70,   70,   70,   70,   70,
       70, -258
    },

    {
        3, -259, -259, -259, -259, -259, -259, -259, -259, -259,
     -259, -259, -259,   70,   70,   70, -259, -259, -259,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -259,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,  290,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -259

    },

    {
        3, -260, -260, -260, -260, -260, -260, -260, -260, -260,
     -260, -260, -260,   70,   70,   70, -260, -260, -260,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -260,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  291,   70,   70,   70,   70,   70,   70,   70,
       70, -260
    },

    {
        3, -261, -261, -261, -261, -261, -261, -261, -261, -261,
     -261, -261, -261,   70,   70,   70, -261, -261, -261,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -261,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  292,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -261
    },

    {
        3, -262, -262, -262, -262, -262, -262, -262, -262, -262,
     -262, -262, -262,   70,   70,   70, -262, -262, -262,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -262,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70, -262
    },

    {
        3, -263, -263, -263, -263, -263, -263, -263, -263, -263,
     -263, -263, -263,   70,   70,   70, -263, -263, -263,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -263,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  293,   70,   70,   70,   70,   70,
       70, -263
    },

    {
        3, -264, -264, -264, -264, -264, -264, -264, -264, -264,
     -264, -264, -264,   70,   70,   70, -264, -264, -264,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -264,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -264
    },

    {
        3, -265, -265, -265, -265, -265, -265, -265, -265, -265,
     -265, -265, -265,   70,   70,   70, -265, -265, -265,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -265,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,  294,   70,   70,   70,   70,   70,
       70, -265
    },

    {
        3, -266, -266, -266, -266, -266, -266, -266, -266, -266,
     -266, -266, -266,   70,   70,   70, -266, -266, -266,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -266,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  295,   70,   70,   70,   70,   70,   70,   70,
       70, -266
    },

    {
        3, -267, -267, -267, -267, -267, -267, -267, -267, -267,

     -267, -267, -267,   70,   70,   70, -267, -267, -267,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -267,   70,  296,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -267
    },

    {
        3, -268, -268, -268, -268, -268, -268, -268, -268, -268,
     -268, -268, -268,   70,   70,   70, -268, -268, -268,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -268,   70,   70,   70,   70,   70,

      297,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -268
    },

    {
        3, -269, -269, -269, -269, -269, -269, -269, -269, -269,
     -269, -269, -269,   70,   70,   70, -269, -269, -269,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -269,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  298,   70,   70,   70,   70,   70,
       70, -269

    },

    {
        3, -270, -270, -270, -270, -270, -270, -270, -270, -270,
     -270, -270, -270,   70,   70,   70, -270, -270, -270,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -270,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  299,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -270
    },

    {
        3, -271, -271, -271, -271, -271, -271, -271, -271, -271,
     -271, -271, -271,   70,   70,   70, -271, -271, -271,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -271,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  300,   70,   70,   70,   70,   70,   70,   70,
       70, -271
    },

    {
        3, -272, -272, -272, -272, -272, -272, -272, -272, -272,
     -272, -272, -272,   70,   70,   70, -272, -272, -272,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -272,   70,   70,   70,   70,   70,
      301,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70, -272
    },

    {
        3, -273, -273, -273, -273, -273, -273, -273, -273, -273,
     -273, -273, -273,   70,   70,   70, -273, -273, -273,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -273,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,  302,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -273
    },

    {
        3, -274, -274, -274, -274, -274, -274, -274, -274, -274,
     -274, -274, -274,   70,   70,   70, -274, -274, -274,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -274,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  303,   70,   70,   70,   70,   70,   70,   70,
       70, -274
    },

    {
        3, -275, -275, -275, -275, -275, -275, -275, -275, -275,
     -275, -275, -275,   70,   70,   70, -275, -275, -275,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -275,  304,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -275
    },

    {
        3, -276, -276, -276, -276, -276, -276, -276, -276, -276,
     -276, -276, -276,   70,   70,   70, -276, -276, -276,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -276,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,  305,   70,   70,   70,   70,
       70, -276
    },

    {
        3, -277, -277, -277, -277, -277, -277, -277, -277, -277,

     -277, -277, -277,   70,   70,   70, -277, -277, -277,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -277,   70,   70,   70,   70,  306,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -277
    },

    {
        3, -278, -278, -278, -278, -278, -278, -278, -278, -278,
     -278, -278, -278,   70,   70,   70, -278, -278, -278,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -278,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -278
    },

    {
        3, -279, -279, -279, -279, -279, -279, -279, -279, -279,
     -279, -279, -279,   70,   70,   70, -279, -279, -279,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -279,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -279

    },

    {
        3, -280, -280, -280, -280, -280, -280, -280, -280, -280,
     -280, -280, -280,   70,   70,   70, -280, -280, -280,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -280,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  307,   70,   70,   70,   70,   70,
       70, -280
    },

    {
        3, -281, -281, -281, -281, -281, -281, -281, -281, -281,
     -281, -281, -281,   70,   70,   70, -281, -281, -281,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -281,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  308,   70,   70,   70,   70,   70,   70,   70,
       70, -281
    },

    {
        3, -282, -282, -282, -282, -282, -282, -282, -282, -282,
     -282, -282, -282,   70,   70,   70, -282, -282, -282,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -282,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  309,   70,   70,   70,   70,   70,

       70, -282
    },

    {
        3, -283, -283, -283, -283, -283, -283, -283, -283, -283,
     -283, -283, -283,   70,   70,   70, -283, -283, -283,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -283,   70,   70,   70,   70,   70,
      310,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -283
    },

    {
        3, -284, -284, -284, -284, -284, -284, -284, -284, -284,
     -284, -284, -284,   70,   70,   70, -284, -284, -284,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -284,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -284
    },

    {
        3, -285, -285, -285, -285, -285, -285, -285, -285, -285,
     -285, -285, -285,   70,   70,   70, -285, -285, -285,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -285,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,  311,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -285
    },

    {
        3, -286, -286, -286, -286, -286, -286, -286, -286, -286,
     -286, -286, -286,   70,   70,   70, -286, -286, -286,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -286,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  312,   70,   70,   70,   70,   70,   70,   70,
       70, -286
    },

    {
        3, -287, -287, -287, -287, -287, -287, -287, -287, -287,

     -287, -287, -287,   70,   70,   70, -287, -287, -287,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -287,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -287
    },

    {
        3, -288, -288, -288, -288, -288, -288, -288, -288, -288,
     -288, -288, -288,   70,   70,   70, -288, -288, -288,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -288,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,  313,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -288
    },

    {
        3, -289, -289, -289, -289, -289, -289, -289, -289, -289,
     -289, -289, -289,   70,   70,   70, -289, -289, -289,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -289,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,  150,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -289

    },

    {
        3, -290, -290, -290, -290, -290, -290, -290, -290, -290,
     -290, -290, -290,   70,   70,   70, -290, -290, -290,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -290,   70,   70,   70,   70,   70,
      314,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -290
    },

    {
        3, -291, -291, -291, -291, -291, -291, -291, -291, -291,
     -291, -291, -291,   70,   70,   70, -291, -291, -291,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -291,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -291
    },

    {
        3, -292, -292, -292, -292, -292, -292, -292, -292, -292,
     -292, -292, -292,   70,   70,   70, -292, -292, -292,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -292,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,  315,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70, -292
    },

    {
        3, -293, -293, -293, -293, -293, -293, -293, -293, -293,
     -293, -293, -293,   70,   70,   70, -293, -293, -293,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -293,   70,  316,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -293
    },

    {
        3, -294, -294, -294, -294, -294, -294, -294, -294, -294,
     -294, -294, -294,   70,   70,   70, -294, -294, -294,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -294,   70,   70,   70,   70,   70,
      317,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -294
    },

    {
        3, -295, -295, -295, -295, -295, -295, -295, -295, -295,
     -295, -295, -295,   70,   70,   70, -295, -295, -295,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -295,   70,   70,   70,   70,   70,
      318,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -295
    },

    {
        3, -296, -296, -296, -296, -296, -296, -296, -296, -296,
     -296, -296, -296,   70,   70,   70, -296, -296, -296,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -296,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  319,   70,   70,   70,   70,   70,
       70, -296
    },

    {
        3, -297, -297, -297, -297, -297, -297, -297, -297, -297,

     -297, -297, -297,   70,   70,   70, -297, -297, -297,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -297,   70,  320,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -297
    },

    {
        3, -298, -298, -298, -298, -298, -298, -298, -298, -298,
     -298, -298, -298,   70,   70,   70, -298, -298, -298,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -298,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  321,   70,   70,   70,   70,   70,   70,   70,
       70, -298
    },

    {
        3, -299, -299, -299, -299, -299, -299, -299, -299, -299,
     -299, -299, -299,   70,   70,   70, -299, -299, -299,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -299,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
      322, -299

    },

    {
        3, -300, -300, -300, -300, -300, -300, -300, -300, -300,
     -300, -300, -300,   70,   70,   70, -300, -300, -300,   70,
       70,  323,   70,   70,   70,   70,   70,   70,   70,   70,
      324,   70,   70,   70, -300,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -300
    },

    {
        3, -301, -301, -301, -301, -301, -301, -301, -301, -301,
     -301, -301, -301,   70,  325,   70, -301, -301, -301,   70,
       70,  326,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -301,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -301
    },

    {
        3, -302, -302, -302, -302, -302, -302, -302, -302, -302,
     -302, -302, -302,   70,   70,   70, -302, -302, -302,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -302,   70,   70,   70,   70,   70,
      327,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70, -302
    },

    {
        3, -303, -303, -303, -303, -303, -303, -303, -303, -303,
     -303, -303, -303,   70,   70,   70, -303, -303, -303,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -303,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -303
    },

    {
        3, -304, -304, -304, -304, -304, -304, -304, -304, -304,
     -304, -304, -304,   70,   70,   70, -304, -304, -304,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -304,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,  328,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -304
    },

    {
        3, -305, -305, -305, -305, -305, -305, -305, -305, -305,
     -305, -305, -305,   70,   70,   70, -305, -305, -305,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -305,   70,   70,   70,   70,   70,
      329,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -305
    },

    {
        3, -306, -306, -306, -306, -306, -306, -306, -306, -306,
     -306, -306, -306,   70,   70,   70, -306, -306, -306,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -306,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -306
    },

    {
        3, -307, -307, -307, -307, -307, -307, -307, -307, -307,

     -307, -307, -307,   70,   70,   70, -307, -307, -307,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -307,   70,   70,   70,   70,   70,
      330,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -307
    },

    {
        3, -308, -308, -308, -308, -308, -308, -308, -308, -308,
     -308, -308, -308,   70,   70,   70, -308, -308, -308,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -308,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,  331,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -308
    },

    {
        3, -309, -309, -309, -309, -309, -309, -309, -309, -309,
     -309, -309, -309,   70,   70,   70, -309, -309, -309,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -309,   70,   70,   70,   70,   70,
      332,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -309

    },

    {
        3, -310, -310, -310, -310, -310, -310, -310, -310, -310,
     -310, -310, -310,   70,   70,   70, -310, -310, -310,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -310,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  333,   70,   70,   70,   70,   70,   70,   70,
       70, -310
    },

    {
        3, -311, -311, -311, -311, -311, -311, -311, -311, -311,
     -311, -311, -311,   70,   70,   70, -311, -311, -311,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -311,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
      334,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -311
    },

    {
        3, -312, -312, -312, -312, -312, -312, -312, -312, -312,
     -312, -312, -312,   70,   70,   70, -312, -312, -312,   70,
       70,  335,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -312,  336,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70, -312
    },

    {
        3, -313, -313, -313, -313, -313, -313, -313, -313, -313,
     -313, -313, -313,   70,   70,   70, -313, -313, -313,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -313,   70,   70,   70,   70,   70,
      337,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -313
    },

    {
        3, -314, -314, -314, -314, -314, -314, -314, -314, -314,
     -314, -314, -314,   70,   70,   70, -314, -314, -314,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -314,   70,   70,   70,   70,  338,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -314
    },

    {
        3, -315, -315, -315, -315, -315, -315, -315, -315, -315,
     -315, -315, -315,   70,   70,   70, -315, -315, -315,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -315,   70,   70,   70,   70,   70,
      150,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -315
    },

    {
        3, -316, -316, -316, -316, -316, -316, -316, -316, -316,
     -316, -316, -316,   70,   70,   70, -316, -316, -316,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -316,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  339,   70,   70,   70,   70,   70,
       70, -316
    },

    {
        3, -317, -317, -317, -317, -317, -317, -317, -317, -317,

     -317, -317, -317,   70,   70,   70, -317, -317, -317,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -317,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,  340,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -317
    },

    {
        3, -318, -318, -318, -318, -318, -318, -318, -318, -318,
     -318, -318, -318,   70,   70,   70, -318, -318, -318,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -318,   70,  341,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -318
    },

    {
        3, -319, -319, -319, -319, -319, -319, -319, -319, -319,
     -319, -319, -319,   70,   70,   70, -319, -319, -319,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -319,   70,  342,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -319

    },

    {
        3, -320, -320, -320, -320, -320, -320, -320, -320, -320,
     -320, -320, -320,   70,   70,   70, -320, -320, -320,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -320,   70,   70,   70,   70,  343,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -320
    },

    {
        3, -321, -321, -321, -321, -321, -321, -321, -321, -321,
     -321, -321, -321,   70,   70,   70, -321, -321, -321,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -321,   70,   70,   70,   70,   70,
      344,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -321
    },

    {
        3, -322, -322, -322, -322, -322, -322, -322, -322, -322,
     -322, -322, -322,   70,   70,   70, -322, -322, -322,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -322,   70,   70,   70,   70,   70,
      345,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70, -322
    },

    {
        3, -323, -323, -323, -323, -323, -323, -323, -323, -323,
     -323, -323, -323,   70,   70,   70, -323, -323, -323,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -323,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
      346,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -323
    },

    {
        3, -324, -324, -324, -324, -324, -324, -324, -324, -324,
     -324, -324, -324,   70,   70,   70, -324, -324, -324,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -324,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  347,   70,   70,   70,   70,   70,
       70, -324
    },

    {
        3, -325, -325, -325, -325, -325, -325, -325, -325, -325,
     -325, -325, -325,   70,   70,   70, -325, -325, -325,   70,
       70,   70,  348,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -325,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -325
    },

    {
        3, -326, -326, -326, -326, -326, -326, -326, -326, -326,
     -326, -326, -326,   70,   70,   70, -326, -326, -326,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -326,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,  349,   70,   70,   70,   70,
       70, -326
    },

    {
        3, -327, -327, -327, -327, -327, -327, -327, -327, -327,

     -327, -327, -327,   70,   70,   70, -327, -327, -327,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
      350,   70,   70,   70, -327,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -327
    },

    {
        3, -328, -328, -328, -328, -328, -328, -328, -328, -328,
     -328, -328, -328,   70,   70,   70, -328, -328, -328,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -328,   70,  351,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -328
    },

    {
        3, -329, -329, -329, -329, -329, -329, -329, -329, -329,
     -329, -329, -329,   70,   70,   70, -329, -329, -329,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -329,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -329

    },

    {
        3, -330, -330, -330, -330, -330, -330, -330, -330, -330,
     -330, -330, -330,   70,   70,   70, -330, -330, -330,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -330,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,  352,   70,
       70, -330
    },

    {
        3, -331, -331, -331, -331, -331, -331, -331, -331, -331,
     -331, -331, -331,   70,   70,   70, -331, -331, -331,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -331,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
      353,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -331
    },

    {
        3, -332, -332, -332, -332, -332, -332, -332, -332, -332,
     -332, -332, -332,   70,   70,   70, -332, -332, -332,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -332,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,  354,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70, -332
    },

    {
        3, -333, -333, -333, -333, -333, -333, -333, -333, -333,
     -333, -333, -333,   70,   70,   70, -333, -333, -333,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -333,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -333
    },

    {
        3, -334, -334, -334, -334, -334, -334, -334, -334, -334,
     -334, -334, -334,   70,   70,   70, -334, -334, -334,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -334,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  150,   70,   70,   70,   70,   70,   70,   70,
       70, -334
    },

    {
        3, -335, -335, -335, -335, -335, -335, -335, -335, -335,
     -335, -335, -335,   70,   70,   70, -335, -335, -335,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  355,   70, -335,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -335
    },

    {
        3, -336, -336, -336, -336, -336, -336, -336, -336, -336,
     -336, -336, -336,   70,   70,   70, -336, -336, -336,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -336,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,  356,   70,   70,   70,   70,   70,   70,
       70, -336
    },

    {
        3, -337, -337, -337, -337, -337, -337, -337, -337, -337,

     -337, -337, -337,   70,   70,   70, -337, -337, -337,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -337,   70,  357,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -337
    },

    {
        3, -338, -338, -338, -338, -338, -338, -338, -338, -338,
     -338, -338, -338,   70,   70,   70, -338, -338, -338,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -338,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -338
    },

    {
        3, -339, -339, -339, -339, -339, -339, -339, -339, -339,
     -339, -339, -339,   70,   70,   70, -339, -339, -339,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -339,   70,   70,   70,   70,   70,
      358,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -339

    },

    {
        3, -340, -340, -340, -340, -340, -340, -340, -340, -340,
     -340, -340, -340,   70,   70,   70, -340, -340, -340,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -340,   70,   70,   70,  359,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -340
    },

    {
        3, -341, -341, -341, -341, -341, -341, -341, -341, -341,
     -341, -341, -341,   70,   70,   70, -341, -341, -341,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -341,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,  360,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -341
    },

    {
        3, -342, -342, -342, -342, -342, -342, -342, -342, -342,
     -342, -342, -342,   70,   70,   70, -342, -342, -342,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
      361,   70,   70,   70, -342,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70, -342
    },

    {
        3, -343, -343, -343, -343, -343, -343, -343, -343, -343,
     -343, -343, -343,   70,   70,   70, -343, -343, -343,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -343,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,  362,   70,   70,   70,   70,   70,   70,
       70, -343
    },

    {
        3, -344, -344, -344, -344, -344, -344, -344, -344, -344,
     -344, -344, -344,   70,   70,   70, -344, -344, -344,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -344,   70,  363,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -344
    },

    {
        3, -345, -345, -345, -345, -345, -345, -345, -345, -345,
     -345, -345, -345,   70,   70,   70, -345, -345, -345,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -345,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,  364,   70,   70,   70,   70,   70,   70,   70,
       70, -345
    },

    {
        3, -346, -346, -346, -346, -346, -346, -346, -346, -346,
     -346, -346, -346,   70,   70,   70, -346, -346, -346,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -346,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,  365,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -346
    },

    {
        3, -347, -347, -347, -347, -347, -347, -347, -347, -347,

     -347, -347, -347,   70,   70,   70, -347, -347, -347,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -347,   70,  366,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -347
    },

    {
        3, -348, -348, -348, -348, -348, -348, -348, -348, -348,
     -348, -348, -348,   70,   70,   70, -348, -348, -348,  367,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -348,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -348
    },

    {
        3, -349, -349, -349, -349, -349, -349, -349, -349, -349,
     -349, -349, -349,   70,   70,   70, -349, -349, -349,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -349,   70,   70,  368,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -349

    },

    {
        3, -350, -350, -350, -350, -350, -350, -350, -350, -350,
     -350, -350, -350,   70,   70,   70, -350, -350, -350,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -350,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  369,   70,   70,   70,   70,   70,
       70, -350
    },

    {
        3, -351, -351, -351, -351, -351, -351, -351, -351, -351,
     -351, -351, -351,   70,   70,   70, -351, -351, -351,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -351,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,  370,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -351
    },

    {
        3, -352, -352, -352, -352, -352, -352, -352, -352, -352,
     -352, -352, -352,   70,   70,   70, -352, -352, -352,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -352,   70,   70,   70,  371,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70, -352
    },

    {
        3, -353, -353, -353, -353, -353, -353, -353, -353, -353,
     -353, -353, -353,   70,   70,   70, -353, -353, -353,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -353,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,  372,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -353
    },

    {
        3, -354, -354, -354, -354, -354, -354, -354, -354, -354,
     -354, -354, -354,   70,   70,   70, -354, -354, -354,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -354,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  373,   70,   70,   70,   70,   70,
       70, -354
    },

    {
        3, -355, -355, -355, -355, -355, -355, -355, -355, -355,
     -355, -355, -355,   70,   70,   70, -355, -355, -355,   70,
      374,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -355,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -355
    },

    {
        3, -356, -356, -356, -356, -356, -356, -356, -356, -356,
     -356, -356, -356,   70,   70,   70, -356, -356, -356,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -356,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  375,   70,   70,   70,   70,   70,
       70, -356
    },

    {
        3, -357, -357, -357, -357, -357, -357, -357, -357, -357,

     -357, -357, -357,   70,   70,   70, -357, -357, -357,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -357,   70,   70,   70,   70,  376,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -357
    },

    {
        3, -358, -358, -358, -358, -358, -358, -358, -358, -358,
     -358, -358, -358,   70,   70,   70, -358, -358, -358,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -358,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -358
    },

    {
        3, -359, -359, -359, -359, -359, -359, -359, -359, -359,
     -359, -359, -359,   70,   70,   70, -359, -359, -359,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -359,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  377,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -359

    },

    {
        3, -360, -360, -360, -360, -360, -360, -360, -360, -360,
     -360, -360, -360,   70,   70,   70, -360, -360, -360,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -360,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -360
    },

    {
        3, -361, -361, -361, -361, -361, -361, -361, -361, -361,
     -361, -361, -361,   70,   70,   70, -361, -361, -361,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -361,   70,   70,   70,   70,   70,
       70,   70,   70,  378,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -361
    },

    {
        3, -362, -362, -362, -362, -362, -362, -362, -362, -362,
     -362, -362, -362,   70,   70,   70, -362, -362, -362,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -362,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70, -362
    },

    {
        3, -363, -363, -363, -363, -363, -363, -363, -363, -363,
     -363, -363, -363,   70,   70,   70, -363, -363, -363,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -363,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,  360,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -363
    },

    {
        3, -364, -364, -364, -364, -364, -364, -364, -364, -364,
     -364, -364, -364,   70,   70,   70, -364, -364, -364,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
      379,   70,   70,   70, -364,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -364
    },

    {
        3, -365, -365, -365, -365, -365, -365, -365, -365, -365,
     -365, -365, -365,   70,   70,   70, -365, -365, -365,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -365,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,  380,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -365
    },

    {
        3, -366, -366, -366, -366, -366, -366, -366, -366, -366,
     -366, -366, -366,   70,   70,   70, -366, -366, -366,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -366,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  381,   70,   70,   70,   70,   70,
       70, -366
    },

    {
        3, -367, -367, -367, -367, -367, -367, -367, -367, -367,

     -367, -367, -367,   70,   70,   70, -367, -367, -367,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -367,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  382,   70,   70,   70,   70,   70,   70,   70,
       70, -367
    },

    {
        3, -368, -368, -368, -368, -368, -368, -368, -368, -368,
     -368, -368, -368,   70,   70,   70, -368, -368, -368,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -368,   70,   70,   70,   70,   70,

      383,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -368
    },

    {
        3, -369, -369, -369, -369, -369, -369, -369, -369, -369,
     -369, -369, -369,   70,   70,   70, -369, -369, -369,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -369,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  384,   70,   70,   70,   70,   70,   70,   70,
       70, -369

    },

    {
        3, -370, -370, -370, -370, -370, -370, -370, -370, -370,
     -370, -370, -370,   70,   70,   70, -370, -370, -370,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -370,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
      385,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -370
    },

    {
        3, -371, -371, -371, -371, -371, -371, -371, -371, -371,
     -371, -371, -371,   70,   70,   70, -371, -371, -371,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -371,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
      386,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -371
    },

    {
        3, -372, -372, -372, -372, -372, -372, -372, -372, -372,
     -372, -372, -372,   70,   70,   70, -372, -372, -372,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -372,   70,  387,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70, -372
    },

    {
        3, -373, -373, -373, -373, -373, -373, -373, -373, -373,
     -373, -373, -373,   70,   70,   70, -373, -373, -373,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -373,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -373
    },

    {
        3, -374, -374, -374, -374, -374, -374, -374, -374, -374,
     -374, -374, -374,   70,   70,   70, -374, -374, -374,   70,

       70,   70,   70,  358,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -374,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -374
    },

    {
        3, -375, -375, -375, -375, -375, -375, -375, -375, -375,
     -375, -375, -375,   70,   70,   70, -375, -375, -375,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -375,   70,  388,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -375
    },

    {
        3, -376, -376, -376, -376, -376, -376, -376, -376, -376,
     -376, -376, -376,   70,   70,   70, -376, -376, -376,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -376,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,  150,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -376
    },

    {
        3, -377, -377, -377, -377, -377, -377, -377, -377, -377,

     -377, -377, -377,   70,   70,   70, -377, -377, -377,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -377,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,  389,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -377
    },

    {
        3, -378, -378, -378, -378, -378, -378, -378, -378, -378,
     -378, -378, -378,   70,   70,   70, -378, -378, -378,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -378,   70,  390,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -378
    },

    {
        3, -379, -379, -379, -379, -379, -379, -379, -379, -379,
     -379, -379, -379,   70,   70,   70, -379, -379, -379,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -379,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  391,   70,   70,   70,   70,   70,
       70, -379

    },

    {
        3, -380, -380, -380, -380, -380, -380, -380, -380, -380,
     -380, -380, -380,   70,   70,   70, -380, -380, -380,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -380,   70,  392,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -380
    },

    {
        3, -381, -381, -381, -381, -381, -381, -381, -381, -381,
     -381, -381, -381,   70,   70,   70, -381, -381, -381,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -381,   70,   70,   70,   70,   70,
      358,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -381
    },

    {
        3, -382, -382, -382, -382, -382, -382, -382, -382, -382,
     -382, -382, -382,   70,   70,   70, -382, -382, -382,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -382,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  393,   70,   70,   70,   70,   70,   70,   70,

       70, -382
    },

    {
        3, -383, -383, -383, -383, -383, -383, -383, -383, -383,
     -383, -383, -383,   70,   70,   70, -383, -383, -383,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -383,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -383
    },

    {
        3, -384, -384, -384, -384, -384, -384, -384, -384, -384,
     -384, -384, -384,   70,   70,   70, -384, -384, -384,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -384,   70,   70,   70,   70,   70,
      394,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -384
    },

    {
        3, -385, -385, -385, -385, -385, -385, -385, -385, -385,
     -385, -385, -385,   70,   70,   70, -385, -385, -385,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -385,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,  150,   70,   70,   70,   70,   70,   70,   70,
       70, -385
    },

    {
        3, -386, -386, -386, -386, -386, -386, -386, -386, -386,
     -386, -386, -386,   70,   70,   70, -386, -386, -386,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -386,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,  395,   70,   70,   70,   70,
       70, -386
    },

    {
        3, -387, -387, -387, -387, -387, -387, -387, -387, -387,

     -387, -387, -387,   70,   70,   70, -387, -387, -387,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -387,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  396,   70,   70,   70,   70,   70,
       70, -387
    },

    {
        3, -388, -388, -388, -388, -388, -388, -388, -388, -388,
     -388, -388, -388,   70,   70,   70, -388, -388, -388,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -388,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  397,   70,   70,   70,   70,   70,
       70, -388
    },

    {
        3, -389, -389, -389, -389, -389, -389, -389, -389, -389,
     -389, -389, -389,   70,   70,   70, -389, -389, -389,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
      398,   70,   70,   70, -389,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -389

    },

    {
        3, -390, -390, -390, -390, -390, -390, -390, -390, -390,
     -390, -390, -390,   70,   70,   70, -390, -390, -390,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -390,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  399,   70,   70,   70,   70,   70,   70,   70,
       70, -390
    },

    {
        3, -391, -391, -391, -391, -391, -391, -391, -391, -391,
     -391, -391, -391,   70,   70,   70, -391, -391, -391,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -391,   70,  400,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -391
    },

    {
        3, -392, -392, -392, -392, -392, -392, -392, -392, -392,
     -392, -392, -392,   70,   70,   70, -392, -392, -392,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -392,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,  401,   70,   70,   70,   70,   70,   70,   70,

       70, -392
    },

    {
        3, -393, -393, -393, -393, -393, -393, -393, -393, -393,
     -393, -393, -393,   70,   70,   70, -393, -393, -393,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -393,   70,  402,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -393
    },

    {
        3, -394, -394, -394, -394, -394, -394, -394, -394, -394,
     -394, -394, -394,   70,   70,   70, -394, -394, -394,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -394,   70,  403,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -394
    },

    {
        3, -395, -395, -395, -395, -395, -395, -395, -395, -395,
     -395, -395, -395,   70,   70,   70, -395, -395, -395,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -395,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,  404,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -395
    },

    {
        3, -396, -396, -396, -396, -396, -396, -396, -396, -396,
     -396, -396, -396,   70,   70,   70, -396, -396, -396,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -396,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  405,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -396
    },

    {
        3, -397, -397, -397, -397, -397, -397, -397, -397, -397,

     -397, -397, -397,   70,   70,   70, -397, -397, -397,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -397,   70,   70,   70,   70,   70,
      358,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -397
    },

    {
        3, -398, -398, -398, -398, -398, -398, -398, -398, -398,
     -398, -398, -398,   70,   70,   70, -398, -398, -398,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -398,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  406,   70,   70,   70,   70,   70,
       70, -398
    },

    {
        3, -399, -399, -399, -399, -399, -399, -399, -399, -399,
     -399, -399, -399,   70,   70,   70, -399, -399, -399,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -399,   70,   70,   70,   70,   70,
      407,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -399

    },

    {
        3, -400, -400, -400, -400, -400, -400, -400, -400, -400,
     -400, -400, -400,   70,   70,   70, -400, -400, -400,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -400,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  408,   70,   70,   70,   70,   70,
       70, -400
    },

    {
        3, -401, -401, -401, -401, -401, -401, -401, -401, -401,
     -401, -401, -401,   70,   70,   70, -401, -401, -401,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -401,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  409,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -401
    },

    {
        3, -402, -402, -402, -402, -402, -402, -402, -402, -402,
     -402, -402, -402,   70,   70,   70, -402, -402, -402,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -402,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,  264,

       70, -402
    },

    {
        3, -403, -403, -403, -403, -403, -403, -403, -403, -403,
     -403, -403, -403,   70,   70,   70, -403, -403, -403,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -403,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,  360,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -403
    },

    {
        3, -404, -404, -404, -404, -404, -404, -404, -404, -404,
     -404, -404, -404,   70,   70,   70, -404, -404, -404,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -404,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  410,   70,   70,   70,   70,   70,
       70, -404
    },

    {
        3, -405, -405, -405, -405, -405, -405, -405, -405, -405,
     -405, -405, -405,   70,   70,   70, -405, -405, -405,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -405,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

      411,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -405
    },

    {
        3, -406, -406, -406, -406, -406, -406, -406, -406, -406,
     -406, -406, -406,   70,   70,   70, -406, -406, -406,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -406,   70,  412,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -406
    },

    {
        3, -407, -407, -407, -407, -407, -407, -407, -407, -407,

     -407, -407, -407,   70,   70,   70, -407, -407, -407,  413,
       70,   70,   70,   70,   70,   70,   70,   70,   70,  414,
       70,   70,   70,   70, -407,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -407
    },

    {
        3, -408, -408, -408, -408, -408, -408, -408, -408, -408,
     -408, -408, -408,   70,   70,   70, -408, -408, -408,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -408,   70,   70,   70,   70,   70,

      358,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -408
    },

    {
        3, -409, -409, -409, -409, -409, -409, -409, -409, -409,
     -409, -409, -409,   70,   70,   70, -409, -409, -409,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -409,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,  415,   70,   70,   70,   70,   70,   70,
       70, -409

    },

    {
        3, -410, -410, -410, -410, -410, -410, -410, -410, -410,
     -410, -410, -410,   70,   70,   70, -410, -410, -410,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -410,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -410
    },

    {
        3, -411, -411, -411, -411, -411, -411, -411, -411, -411,
     -411, -411, -411,   70,   70,   70, -411, -411, -411,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -411,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,  150,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -411
    },

    {
        3, -412, -412, -412, -412, -412, -412, -412, -412, -412,
     -412, -412, -412,   70,   70,   70, -412, -412, -412,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -412,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  416,   70,   70,   70,   70,   70,

       70, -412
    },

    {
        3, -413, -413, -413, -413, -413, -413, -413, -413, -413,
     -413, -413, -413,   70,   70,   70, -413, -413, -413,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -413,   70,   70,  417,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -413
    },

    {
        3, -414, -414, -414, -414, -414, -414, -414, -414, -414,
     -414, -414, -414,   70,   70,   70, -414, -414, -414,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -414,   70,   70,   70,   70,   70,
      418,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -414
    },

    {
        3, -415, -415, -415, -415, -415, -415, -415, -415, -415,
     -415, -415, -415,   70,   70,   70, -415, -415, -415,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -415,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

      419,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -415
    },

    {
        3, -416, -416, -416, -416, -416, -416, -416, -416, -416,
     -416, -416, -416,   70,   70,   70, -416, -416, -416,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -416,   70,   70,   70,   70,   70,
      358,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -416
    },

    {
        3, -417, -417, -417, -417, -417, -417, -417, -417, -417,

     -417, -417, -417,   70,   70,   70, -417, -417, -417,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -417,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,  420,   70,   70,   70,   70,   70,   70,
       70, -417
    },

    {
        3, -418, -418, -418, -418, -418, -418, -418, -418, -418,
     -418, -418, -418,   70,   70,   70, -418, -418, -418,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -418,   70,   70,   70,   70,   70,

       70,   70,   70,   70,   70,   70,   70,  421,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -418
    },

    {
        3, -419, -419, -419, -419, -419, -419, -419, -419, -419,
     -419, -419, -419,   70,   70,   70, -419, -419, -419,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -419,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,  422,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -419

    },

    {
        3, -420, -420, -420, -420, -420, -420, -420, -420, -420,
     -420, -420, -420,   70,   70,   70, -420, -420, -420,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -420,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -420
    },

    {
        3, -421, -421, -421, -421, -421, -421, -421, -421, -421,
     -421, -421, -421,   70,   70,   70, -421, -421, -421,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70, -421,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -421
    },

    {
        3, -422, -422, -422, -422, -422, -422, -422, -422, -422,
     -422, -422, -422,   70,   70,   70, -422, -422, -422,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
      423,   70,   70,   70, -422,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70, -422
    },

    {
        3, -423, -423, -423, -423, -423, -423, -423, -423, -423,
     -423, -423, -423,   70,   70,   70, -423, -423, -423,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -423,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,  424,   70,   70,   70,   70,   70,
       70, -423
    },

    {
        3, -424, -424, -424, -424, -424, -424, -424, -424, -424,
     -424, -424, -424,   70,   70,   70, -424, -424, -424,   70,

       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -424,   70,  425,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -424
    },

    {
        3, -425, -425, -425, -425, -425, -425, -425, -425, -425,
     -425, -425, -425,   70,   70,   70, -425, -425, -425,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -425,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,

       70,   70,   70,   70,  426,   70,   70,   70,   70,   70,
       70, -425
    },

    {
        3, -426, -426, -426, -426, -426, -426, -426, -426, -426,
     -426, -426, -426,   70,   70,   70, -426, -426, -426,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70, -426,   70,   70,   70,   70,   70,
      358,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70, -426
    },

    } ;


static yy_state_type yy_get_previous_state YY_PROTO(( void ));
static yy_state_type yy_try_NUL_trans YY_PROTO(( yy_state_type current_state ));
static int yy_get_next_buffer YY_PROTO(( void ));
static void yy_fatal_error YY_PROTO(( yyconst char msg[] ));

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	yytext_ptr = yy_bp; \
	yyleng = (int) (yy_cp - yy_bp); \
	yy_hold_char = *yy_cp; \
	*yy_cp = '\0'; \
	yy_c_buf_p = yy_cp;

#define YY_NUM_RULES 58
#define YY_END_OF_BUFFER 59
static yyconst short int yy_accept[427] =
    {   0,
        0,    0,   59,   57,   56,   56,    5,   57,    5,    5,
       57,    4,    5,    5,    5,   44,   44,    5,    5,    5,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,    5,   56,    9,
        0,   54,    0,   12,    0,    0,   14,   15,   51,   50,
       44,    0,   44,    0,    6,   11,    8,   10,    7,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   22,   53,   53,   53,   53,
       53,   18,    1,   53,   53,   53,   53,   53,   53,   53,

       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       13,   54,   55,   55,    0,   47,   49,    0,   46,    0,
       52,   43,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   20,   53,   53,   53,   53,   53,   53,   53,    1,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,    0,   51,
        0,   45,    0,   50,   48,   43,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   19,   53,   53,   53,   53,   53,    1,

       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   30,   53,   53,   53,   34,   53,
       53,    0,   49,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   23,   53,   53,   53,   53,   53,
       31,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   21,   53,   40,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   29,   27,   53,
       53,   53,   53,   16,   53,   53,   17,   53,   53,   53,
       26,   53,   53,   53,   53,   53,   53,   53,   53,   53,

       53,   53,   42,   53,   53,   33,   53,   53,   53,   53,
       53,    3,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   24,   53,
       53,   53,   25,   53,   53,   53,    1,   32,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   40,   53,   53,
       53,   53,   53,   53,   53,   53,   53,    3,   53,    2,
       53,   36,   53,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   28,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   41,   53,   53,   53,   53,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   53,

       53,   53,   53,   53,   53,   53,   39,   53,   53,   35,
       53,   53,   53,   53,   53,   53,   53,   53,   53,   38,
       37,   53,   53,   53,   53,   53
    } ;

static yyconst int yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    2,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    4,    5,    1,    1,    6,    7,    8,    9,
        9,    6,   10,    9,   11,   12,    6,   13,   14,   14,
       14,   15,   15,   15,   15,   15,   15,    9,    9,   16,
       17,   18,    9,    1,   19,   20,   21,   22,   23,   24,
       25,   25,   25,   25,   25,   26,   25,   27,   25,   28,
       25,   29,   30,   31,   32,   25,   25,   33,   25,   25,
        9,   34,    9,    6,   35,    1,   36,   37,   38,   39,

       40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
       50,   51,   25,   52,   53,   54,   55,   56,   57,   58,
       59,   60,    9,   61,    9,    6,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    } ;

static yy_state_type yy_last_accepting_state;
static char *yy_last_accepting_cpos;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
char *yytext;

#define INITIAL 0
#define YY_NEVER_INTERACTIVE 1
#define YY_NO_INPUT 1
#define YY_NO_UNPUT 1
#define YY_NO_SCAN_BUFFER 1
#define YY_NO_SCAN_BYTES 1
#define YY_NO_SCAN_STRING 1

#include <stdio.h>
#include <string.h>
#include "parameter.hpp"
#include "parser.hpp"
#include "positionaware.hpp"
#include "assertlogging.hpp"
#include <fstream>


std::ostream* theDumpCppFile = 0;
PARAMETER_MUTABLE(p_dumpcpp, "dumpcpp");
inline static void debug_cpp_output(const char* buf, int len)
{
  if(p_dumpcpp)
  {
    if(theDumpCppFile==0) theDumpCppFile = new std::ofstream(p_dumpcpp.ValueStr());
    ASSERT_ERROR(theDumpCppFile->good())(p_dumpcpp).Text("Usage: ... --dumpcpp=filename ...");
    theDumpCppFile->write(buf,len);
  }
}

int yypreproclex( char* buf, int result, int max_len);

//this callback makes flex read from preprocessor rather than from input
#define YY_INPUT(buf,result,max_size) { result = yypreproclex(buf, 0, max_size); debug_cpp_output(buf,result); }
 
#define YY_USER_ACTION zzlval=yytext;



/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int yywrap YY_PROTO(( void ));
#else
extern int yywrap YY_PROTO(( void ));
#endif
#endif

#ifndef YY_NO_UNPUT
static void yyunput YY_PROTO(( int c, char *buf_ptr ));
#endif

#ifndef yytext_ptr
static void yy_flex_strncpy YY_PROTO(( char *, yyconst char *, int ));
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen YY_PROTO(( yyconst char * ));
#endif

#ifndef YY_NO_INPUT
#ifdef __cplusplus
static int yyinput YY_PROTO(( void ));
#else
static int input YY_PROTO(( void ));
#endif
#endif

#if YY_STACK_USED
static int yy_start_stack_ptr = 0;
static int yy_start_stack_depth = 0;
static int *yy_start_stack = 0;
#ifndef YY_NO_PUSH_STATE
static void yy_push_state YY_PROTO(( int new_state ));
#endif
#ifndef YY_NO_POP_STATE
static void yy_pop_state YY_PROTO(( void ));
#endif
#ifndef YY_NO_TOP_STATE
static int yy_top_state YY_PROTO(( void ));
#endif

#else
#define YY_NO_PUSH_STATE 1
#define YY_NO_POP_STATE 1
#define YY_NO_TOP_STATE 1
#endif

#ifdef YY_MALLOC_DECL
YY_MALLOC_DECL
#else
#if __STDC__
#ifndef __cplusplus
#include <stdlib.h>
#endif
#else
/* Just try to get by without declaring the routines.  This will fail
 * miserably on non-ANSI systems for which sizeof(size_t) != sizeof(int)
 * or sizeof(void*) != sizeof(int).
 */
#endif
#endif

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#define YY_READ_BUF_SIZE 8192
#endif

/* Copy whatever the last rule matched to the standard output. */

#ifndef ECHO
/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */
#define ECHO (void) fwrite( yytext, yyleng, 1, yyout )
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
	if ( yy_current_buffer->yy_is_interactive ) \
		{ \
		int c = '*', n; \
		for ( n = 0; n < max_size && \
			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
			buf[n] = (char) c; \
		if ( c == '\n' ) \
			buf[n++] = (char) c; \
		if ( c == EOF && ferror( yyin ) ) \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
		result = n; \
		} \
	else if ( ((result = fread( buf, 1, max_size, yyin )) == 0) \
		  && ferror( yyin ) ) \
		YY_FATAL_ERROR( "input in flex scanner failed" );
#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
#endif

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL int yylex YY_PROTO(( void ))
#endif

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK break;
#endif

#define YY_RULE_SETUP \
	YY_USER_ACTION

YY_DECL
	{
	register yy_state_type yy_current_state;
	register char *yy_cp, *yy_bp;
	register int yy_act;




	if ( yy_init )
		{
		yy_init = 0;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! yy_start )
			yy_start = 1;	/* first start state */

		if ( ! yyin )
			yyin = stdin;

		if ( ! yyout )
			yyout = stdout;

		if ( ! yy_current_buffer )
			yy_current_buffer =
				yy_create_buffer( yyin, YY_BUF_SIZE );

		yy_load_buffer_state();
		}

	while ( 1 )		/* loops until end-of-file is reached */
		{
		yy_cp = yy_c_buf_p;

		/* Support of yytext. */
		*yy_cp = yy_hold_char;

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = yy_start;
yy_match:
		while ( (yy_current_state = yy_nxt[yy_current_state][yy_ec[YY_SC_TO_UI(*yy_cp)]]) > 0 )
			{
			if ( yy_accept[yy_current_state] )
				{
				yy_last_accepting_state = yy_current_state;
				yy_last_accepting_cpos = yy_cp;
				}

			++yy_cp;
			}

		yy_current_state = -yy_current_state;

yy_find_action:
		yy_act = yy_accept[yy_current_state];

		YY_DO_BEFORE_ACTION;


do_action:	/* This label is used only to access EOF actions. */


		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = yy_hold_char;
			yy_cp = yy_last_accepting_cpos + 1;
			yy_current_state = yy_last_accepting_state;
			goto yy_find_action;

case 1:
YY_RULE_SETUP

return MODIFIER_KEYWORD;
	YY_BREAK
case 2:
YY_RULE_SETUP

return STREAM;
	YY_BREAK
case 3:
YY_RULE_SETUP

return SAMPLER;
	YY_BREAK
case 4:
YY_RULE_SETUP

return *yytext; //special chars
	YY_BREAK
case 5:
YY_RULE_SETUP

return *yytext; //operators    
	YY_BREAK
case 6:
YY_RULE_SETUP

return LSHFT;
	YY_BREAK
case 7:
YY_RULE_SETUP

return RSHFT;
	YY_BREAK
case 8:
YY_RULE_SETUP

return EQ;
	YY_BREAK
case 9:
YY_RULE_SETUP

return NE;
	YY_BREAK
case 10:
YY_RULE_SETUP

return GE;
	YY_BREAK
case 11:
YY_RULE_SETUP

return LE;
	YY_BREAK
case 12:
YY_RULE_SETUP

return AND;
	YY_BREAK
case 13:
YY_RULE_SETUP

return OR;
	YY_BREAK
case 14:
YY_RULE_SETUP

return PLUSPLUS;
	YY_BREAK
case 15:
YY_RULE_SETUP

return MINUSMINUS;
	YY_BREAK
case 16:
YY_RULE_SETUP

return RETURN;
	YY_BREAK
case 17:
YY_RULE_SETUP

return STRUCT;
	YY_BREAK
case 18:
YY_RULE_SETUP

return IF;
	YY_BREAK
case 19:
YY_RULE_SETUP

return ELSE;
	YY_BREAK
case 20:
YY_RULE_SETUP

return FOR;
	YY_BREAK
case 21:
YY_RULE_SETUP

return WHILE;
	YY_BREAK
case 22:
YY_RULE_SETUP

return DO;
	YY_BREAK
case 23:
YY_RULE_SETUP

return BREAK;
	YY_BREAK
case 24:
YY_RULE_SETUP

return CONTINUE;
	YY_BREAK
case 25:
YY_RULE_SETUP

return REGISTER;
	YY_BREAK
case 26:
YY_RULE_SETUP

return VECTOR;
	YY_BREAK
case 27:
YY_RULE_SETUP

return MATRIX;
	YY_BREAK
case 28:
YY_RULE_SETUP

return PERSISTENT;
	YY_BREAK
case 29:
YY_RULE_SETUP

return GLOBAL;
	YY_BREAK
case 30:
YY_RULE_SETUP

return KW_TRUE;
	YY_BREAK
case 31:
YY_RULE_SETUP

return KW_FALSE;
	YY_BREAK
case 32:
YY_RULE_SETUP

return KW_UNSIGNED;
	YY_BREAK
case 33:
YY_RULE_SETUP

return DISCARD;
	YY_BREAK
case 34:
YY_RULE_SETUP

return KW_VOID;
	YY_BREAK
case 35:
YY_RULE_SETUP

return KW_MAX_VTXCNT;
	YY_BREAK
case 36:
YY_RULE_SETUP

return KW_NUM_THREADS;
	YY_BREAK
case 37:
YY_RULE_SETUP

return KW_LDS_REL;
	YY_BREAK
case 38:
YY_RULE_SETUP

return KW_LDS_ABS;
	YY_BREAK
case 39:
YY_RULE_SETUP

return KW_LDS;
	YY_BREAK
case 40:
YY_RULE_SETUP

return TEXTURERXD;
	YY_BREAK
case 41:
YY_RULE_SETUP

return TEXTURERXD;
	YY_BREAK
case 42:
YY_RULE_SETUP

return CBUFFER;
	YY_BREAK
case 43:
YY_RULE_SETUP

return HEX;
	YY_BREAK
case 44:
YY_RULE_SETUP

return INTEGER;
	YY_BREAK
case 45:
YY_RULE_SETUP

return FLOAT;
	YY_BREAK
case 46:
YY_RULE_SETUP

return FLOAT;
	YY_BREAK
case 47:
YY_RULE_SETUP

return FLOAT;
	YY_BREAK
case 48:
YY_RULE_SETUP

return FLOAT;
	YY_BREAK
case 49:
YY_RULE_SETUP

return DOUBLE;
	YY_BREAK
case 50:
YY_RULE_SETUP

return DOUBLE;
	YY_BREAK
case 51:
YY_RULE_SETUP

return DOUBLE;
	YY_BREAK
case 52:
YY_RULE_SETUP

return DOUBLE;
	YY_BREAK
case 53:
YY_RULE_SETUP

return IDENT;
	YY_BREAK
case 54:
YY_RULE_SETUP

return STRING;
	YY_BREAK
case 55:
YY_RULE_SETUP

return CHAR;
	YY_BREAK
case 56:
YY_RULE_SETUP

/* whitespace */;
	YY_BREAK
case 57:
YY_RULE_SETUP

NOTICE("lex missed something???")((const char*)yytext);
	YY_BREAK
case 58:
YY_RULE_SETUP

YY_FATAL_ERROR( "flex scanner jammed" );
	YY_BREAK
case YY_STATE_EOF(INITIAL):
	yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - yytext_ptr) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = yy_hold_char;
		YY_RESTORE_YY_MORE_OFFSET

		if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between yy_current_buffer and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			yy_n_chars = yy_current_buffer->yy_n_chars;
			yy_current_buffer->yy_input_file = yyin;
			yy_current_buffer->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( yy_c_buf_p <= &yy_current_buffer->yy_ch_buf[yy_n_chars] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			yy_c_buf_p = yytext_ptr + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state();

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = yytext_ptr + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++yy_c_buf_p;
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = yy_c_buf_p;
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer() )
			{
			case EOB_ACT_END_OF_FILE:
				{
				yy_did_buffer_switch_on_eof = 0;

				if ( yywrap() )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					yy_c_buf_p = yytext_ptr + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				yy_c_buf_p =
					yytext_ptr + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state();

				yy_cp = yy_c_buf_p;
				yy_bp = yytext_ptr + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				yy_c_buf_p =
				&yy_current_buffer->yy_ch_buf[yy_n_chars];

				yy_current_state = yy_get_previous_state();

				yy_cp = yy_c_buf_p;
				yy_bp = yytext_ptr + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of yylex */


/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */

static int yy_get_next_buffer()
	{
	register char *dest = yy_current_buffer->yy_ch_buf;
	register char *source = yytext_ptr;
	register int number_to_move, i;
	int ret_val;

	if ( yy_c_buf_p > &yy_current_buffer->yy_ch_buf[yy_n_chars + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( yy_current_buffer->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( yy_c_buf_p - yytext_ptr - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) (yy_c_buf_p - yytext_ptr) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		yy_current_buffer->yy_n_chars = yy_n_chars = 0;

	else
		{
		int num_to_read =
			yy_current_buffer->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */
#ifdef YY_USES_REJECT
			YY_FATAL_ERROR(
"input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
#else

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = yy_current_buffer;

			int yy_c_buf_p_offset =
				(int) (yy_c_buf_p - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					yy_flex_realloc( (void *) b->yy_ch_buf,
							 b->yy_buf_size + 2 );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = 0;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			yy_c_buf_p = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = yy_current_buffer->yy_buf_size -
						number_to_move - 1;
#endif
			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&yy_current_buffer->yy_ch_buf[number_to_move]),
			yy_n_chars, num_to_read );

		yy_current_buffer->yy_n_chars = yy_n_chars;
		}

	if ( yy_n_chars == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			yy_current_buffer->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	yy_n_chars += number_to_move;
	yy_current_buffer->yy_ch_buf[yy_n_chars] = YY_END_OF_BUFFER_CHAR;
	yy_current_buffer->yy_ch_buf[yy_n_chars + 1] = YY_END_OF_BUFFER_CHAR;

	yytext_ptr = &yy_current_buffer->yy_ch_buf[0];

	return ret_val;
	}


/* yy_get_previous_state - get the state just before the EOB char was reached */

static yy_state_type yy_get_previous_state()
	{
	register yy_state_type yy_current_state;
	register char *yy_cp;

	yy_current_state = yy_start;

	for ( yy_cp = yytext_ptr + YY_MORE_ADJ; yy_cp < yy_c_buf_p; ++yy_cp )
		{
		yy_current_state = yy_nxt[yy_current_state][(*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1)];
		if ( yy_accept[yy_current_state] )
			{
			yy_last_accepting_state = yy_current_state;
			yy_last_accepting_cpos = yy_cp;
			}
		}

	return yy_current_state;
	}


/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */

#ifdef YY_USE_PROTOS
static yy_state_type yy_try_NUL_trans( yy_state_type yy_current_state )
#else
static yy_state_type yy_try_NUL_trans( yy_current_state )
yy_state_type yy_current_state;
#endif
	{
	register int yy_is_jam;
	register char *yy_cp = yy_c_buf_p;

	yy_current_state = yy_nxt[yy_current_state][1];
	yy_is_jam = (yy_current_state <= 0);

	if ( ! yy_is_jam )
		{
		if ( yy_accept[yy_current_state] )
			{
			yy_last_accepting_state = yy_current_state;
			yy_last_accepting_cpos = yy_cp;
			}
		}

	return yy_is_jam ? 0 : yy_current_state;
	}


#ifndef YY_NO_UNPUT
#ifdef YY_USE_PROTOS
static void yyunput( int c, register char *yy_bp )
#else
static void yyunput( c, yy_bp )
int c;
register char *yy_bp;
#endif
	{
	register char *yy_cp = yy_c_buf_p;

	/* undo effects of setting up yytext */
	*yy_cp = yy_hold_char;

	if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		register int number_to_move = yy_n_chars + 2;
		register char *dest = &yy_current_buffer->yy_ch_buf[
					yy_current_buffer->yy_buf_size + 2];
		register char *source =
				&yy_current_buffer->yy_ch_buf[number_to_move];

		while ( source > yy_current_buffer->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		yy_current_buffer->yy_n_chars =
			yy_n_chars = yy_current_buffer->yy_buf_size;

		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;


	yytext_ptr = yy_bp;
	yy_hold_char = *yy_cp;
	yy_c_buf_p = yy_cp;
	}
#endif	/* ifndef YY_NO_UNPUT */


#ifdef __cplusplus
static int yyinput()
#else
static int input()
#endif
	{
	int c;

	*yy_c_buf_p = yy_hold_char;

	if ( *yy_c_buf_p == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( yy_c_buf_p < &yy_current_buffer->yy_ch_buf[yy_n_chars] )
			/* This was really a NUL. */
			*yy_c_buf_p = '\0';

		else
			{ /* need more input */
			int offset = yy_c_buf_p - yytext_ptr;
			++yy_c_buf_p;

			switch ( yy_get_next_buffer() )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/* fall through */

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap() )
						return EOF;

					if ( ! yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					yy_c_buf_p = yytext_ptr + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) yy_c_buf_p;	/* cast for 8-bit char's */
	*yy_c_buf_p = '\0';	/* preserve yytext */
	yy_hold_char = *++yy_c_buf_p;


	return c;
	}


#ifdef YY_USE_PROTOS
void yyrestart( FILE *input_file )
#else
void yyrestart( input_file )
FILE *input_file;
#endif
	{
	if ( ! yy_current_buffer )
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE );

	yy_init_buffer( yy_current_buffer, input_file );
	yy_load_buffer_state();
	}


#ifdef YY_USE_PROTOS
void yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
#else
void yy_switch_to_buffer( new_buffer )
YY_BUFFER_STATE new_buffer;
#endif
	{
	if ( yy_current_buffer == new_buffer )
		return;

	if ( yy_current_buffer )
		{
		/* Flush out information for old buffer. */
		*yy_c_buf_p = yy_hold_char;
		yy_current_buffer->yy_buf_pos = yy_c_buf_p;
		yy_current_buffer->yy_n_chars = yy_n_chars;
		}

	yy_current_buffer = new_buffer;
	yy_load_buffer_state();

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	yy_did_buffer_switch_on_eof = 1;
	}


#ifdef YY_USE_PROTOS
void yy_load_buffer_state( void )
#else
void yy_load_buffer_state()
#endif
	{
	yy_n_chars = yy_current_buffer->yy_n_chars;
	yytext_ptr = yy_c_buf_p = yy_current_buffer->yy_buf_pos;
	yyin = yy_current_buffer->yy_input_file;
	yy_hold_char = *yy_c_buf_p;
	}


#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_create_buffer( FILE *file, int size )
#else
YY_BUFFER_STATE yy_create_buffer( file, size )
FILE *file;
int size;
#endif
	{
	YY_BUFFER_STATE b;

	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) yy_flex_alloc( b->yy_buf_size + 2 );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
	}


#ifdef YY_USE_PROTOS
void yy_delete_buffer( YY_BUFFER_STATE b )
#else
void yy_delete_buffer( b )
YY_BUFFER_STATE b;
#endif
	{
	if ( ! b )
		return;

	if ( b == yy_current_buffer )
		yy_current_buffer = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		yy_flex_free( (void *) b->yy_ch_buf );

	yy_flex_free( (void *) b );
	}


#ifndef YY_ALWAYS_INTERACTIVE
#ifndef YY_NEVER_INTERACTIVE
extern int isatty YY_PROTO(( int ));
#endif
#endif

#ifdef YY_USE_PROTOS
void yy_init_buffer( YY_BUFFER_STATE b, FILE *file )
#else
void yy_init_buffer( b, file )
YY_BUFFER_STATE b;
FILE *file;
#endif


	{
	yy_flush_buffer( b );

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

#if YY_ALWAYS_INTERACTIVE
	b->yy_is_interactive = 1;
#else
#if YY_NEVER_INTERACTIVE
	b->yy_is_interactive = 0;
#else
	b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
#endif
#endif
	}


#ifdef YY_USE_PROTOS
void yy_flush_buffer( YY_BUFFER_STATE b )
#else
void yy_flush_buffer( b )
YY_BUFFER_STATE b;
#endif

	{
	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == yy_current_buffer )
		yy_load_buffer_state();
	}


#ifndef YY_NO_SCAN_BUFFER
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_buffer( char *base, yy_size_t size )
#else
YY_BUFFER_STATE yy_scan_buffer( base, size )
char *base;
yy_size_t size;
#endif
	{
	YY_BUFFER_STATE b;

	if ( size < 2 ||
	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
	     base[size-1] != YY_END_OF_BUFFER_CHAR )
		/* They forgot to leave room for the EOB's. */
		return 0;

	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );

	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = 0;
	b->yy_n_chars = b->yy_buf_size;
	b->yy_is_interactive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = YY_BUFFER_NEW;

	yy_switch_to_buffer( b );

	return b;
	}
#endif


#ifndef YY_NO_SCAN_STRING
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_string( yyconst char *yy_str )
#else
YY_BUFFER_STATE yy_scan_string( yy_str )
yyconst char *yy_str;
#endif
	{
	int len;
	for ( len = 0; yy_str[len]; ++len )
		;

	return yy_scan_bytes( yy_str, len );
	}
#endif


#ifndef YY_NO_SCAN_BYTES
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_bytes( yyconst char *bytes, int len )
#else
YY_BUFFER_STATE yy_scan_bytes( bytes, len )
yyconst char *bytes;
int len;
#endif
	{
	YY_BUFFER_STATE b;
	char *buf;
	yy_size_t n;
	int i;

	/* Get memory for full buffer, including space for trailing EOB's. */
	n = len + 2;
	buf = (char *) yy_flex_alloc( n );
	if ( ! buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );

	for ( i = 0; i < len; ++i )
		buf[i] = bytes[i];

	buf[len] = buf[len+1] = YY_END_OF_BUFFER_CHAR;

	b = yy_scan_buffer( buf, n );
	if ( ! b )
		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */
	b->yy_is_our_buffer = 1;

	return b;
	}
#endif


#ifndef YY_NO_PUSH_STATE
#ifdef YY_USE_PROTOS
static void yy_push_state( int new_state )
#else
static void yy_push_state( new_state )
int new_state;
#endif
	{
	if ( yy_start_stack_ptr >= yy_start_stack_depth )
		{
		yy_size_t new_size;

		yy_start_stack_depth += YY_START_STACK_INCR;
		new_size = yy_start_stack_depth * sizeof( int );

		if ( ! yy_start_stack )
			yy_start_stack = (int *) yy_flex_alloc( new_size );

		else
			yy_start_stack = (int *) yy_flex_realloc(
					(void *) yy_start_stack, new_size );

		if ( ! yy_start_stack )
			YY_FATAL_ERROR(
			"out of memory expanding start-condition stack" );
		}

	yy_start_stack[yy_start_stack_ptr++] = YY_START;

	BEGIN(new_state);
	}
#endif


#ifndef YY_NO_POP_STATE
static void yy_pop_state()
	{
	if ( --yy_start_stack_ptr < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN(yy_start_stack[yy_start_stack_ptr]);
	}
#endif


#ifndef YY_NO_TOP_STATE
static int yy_top_state()
	{
	return yy_start_stack[yy_start_stack_ptr - 1];
	}
#endif

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

#ifdef YY_USE_PROTOS
static void yy_fatal_error( yyconst char msg[] )
#else
static void yy_fatal_error( msg )
char msg[];
#endif
	{
	(void) fprintf( stderr, "%s\n", msg );
	exit( YY_EXIT_FAILURE );
	}



/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
		yytext[yyleng] = yy_hold_char; \
		yy_c_buf_p = yytext + n; \
		yy_hold_char = *yy_c_buf_p; \
		*yy_c_buf_p = '\0'; \
		yyleng = n; \
		} \
	while ( 0 )


/* Internal utility routines. */

#ifndef yytext_ptr
#ifdef YY_USE_PROTOS
static void yy_flex_strncpy( char *s1, yyconst char *s2, int n )
#else
static void yy_flex_strncpy( s1, s2, n )
char *s1;
yyconst char *s2;
int n;
#endif
	{
	register int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
	}
#endif

#ifdef YY_NEED_STRLEN
#ifdef YY_USE_PROTOS
static int yy_flex_strlen( yyconst char *s )
#else
static int yy_flex_strlen( s )
yyconst char *s;
#endif
	{
	register int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
	}
#endif


#ifdef YY_USE_PROTOS
static void *yy_flex_alloc( yy_size_t size )
#else
static void *yy_flex_alloc( size )
yy_size_t size;
#endif
	{
	return (void *) malloc( size );
	}

#ifdef YY_USE_PROTOS
static void *yy_flex_realloc( void *ptr, yy_size_t size )
#else
static void *yy_flex_realloc( ptr, size )
void *ptr;
yy_size_t size;
#endif
	{
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return (void *) realloc( (char *) ptr, size );
	}

#ifdef YY_USE_PROTOS
static void yy_flex_free( void *ptr )
#else
static void yy_flex_free( ptr )
void *ptr;
#endif
	{
	free( ptr );
	}

#if YY_MAIN
int main()
	{
	yylex();
	return 0;
	}
#endif


